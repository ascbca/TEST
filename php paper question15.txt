//1.online perfume store
//2. online sweet store 
//3."Tattoo shop"
//4.gift shoping
//5."online bike service management "
//6.real state system 
//7.Movie ticket booking 
//8.library Management
//9.Write a PHP code which accepts details for Real Estate.	[40]
    a.	Give the facility for searching category wise (bunglow, row house, shop, land, etc.) and area wise different properties.
     b.	Create database and provide facility to insert and delete using form.
     c.	Provide appropriate validations.

//10.  Write a PHP/MySQL code which manages the employee information in      [40]
EMP_DETAILS (empno,empname,salary,doj). It should provide insert, update facility along with searching facility to search employee’s details according to their salary, experience and display in proper format with validation.

//11. college management system
//12.stock management system 
//13. online hotel booking
//14.banking system
//15. create a website online hotel booking using php  which have information like customer name , hotel_city,hotel_state , no. of persons , booking date ,room type , etc. store these record in database .also provide facility to customer like:- 
booking hotel according to your choice 
cancellation booking







1).
create a webpage for online perfume store using php for the different user       
admin user:- add perfumes
guest user:- signup(this require only mobile no and password)
customer : -   sign in 
                     view all perfumes 



CREATE DATABASE perfume_store;

USE perfume_store;

-- Table for perfumes
CREATE TABLE perfumes (
    id INT AUTO_INCREMENT PRIMARY KEY,
    perfume_name VARCHAR(100) NOT NULL,
    description TEXT NOT NULL,
    price DECIMAL(10, 2) NOT NULL
);

-- Table for users
CREATE TABLE users (
    id INT AUTO_INCREMENT PRIMARY KEY,
    mobile_no VARCHAR(15) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    role ENUM('admin', 'customer') NOT NULL
);

=>1. Signup Page (signup.php)

<?php
include 'db_connect.php';  // Connect to the database

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $mobile_no = $_POST['mobile_no'];
    $password = password_hash($_POST['password'], PASSWORD_DEFAULT);  // Encrypt the password

    // Check if mobile number already exists
    $check_user_query = "SELECT * FROM users WHERE mobile_no = '$mobile_no'";
    $result = mysqli_query($conn, $check_user_query);

    if (mysqli_num_rows($result) > 0) {
        echo "User already exists!";
    } else {
        // Insert new user
        $query = "INSERT INTO users (mobile_no, password, role) VALUES ('$mobile_no', '$password', 'customer')";
        if (mysqli_query($conn, $query)) {
            echo "Signup successful!";
        } else {
            echo "Error: " . mysqli_error($conn);
        }
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <title>Sign Up</title>
</head>
<body>
    <h2>Sign Up</h2>
    <form method="POST">
        <label>Mobile Number:</label>
        <input type="text" name="mobile_no" required>
        <br>
        <label>Password:</label>
        <input type="password" name="password" required>
        <br>
        <button type="submit">Sign Up</button>
    </form>
</body>
</html>


=> 2. Sign In Page (signin.php)

<?php
include 'db_connect.php';

session_start();

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $mobile_no = $_POST['mobile_no'];
    $password = $_POST['password'];

    // Check if user exists
    $query = "SELECT * FROM users WHERE mobile_no = '$mobile_no'";
    $result = mysqli_query($conn, $query);
    $user = mysqli_fetch_assoc($result);

    if ($user && password_verify($password, $user['password'])) {
        // Login successful
        $_SESSION['user_id'] = $user['id'];
        $_SESSION['role'] = $user['role'];
        header("Location: view_perfumes.php");
        exit();
    } else {
        echo "Invalid mobile number or password!";
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <title>Sign In</title>
</head>
<body>
    <h2>Sign In</h2>
    <form method="POST">
        <label>Mobile Number:</label>
        <input type="text" name="mobile_no" required>
        <br>
        <label>Password:</label>
        <input type="password" name="password" required>
        <br>
        <button type="submit">Sign In</button>
    </form>
</body>
</html>


=> 3. Admin Dashboard (add_perfume.php)

<?php
include 'db_connect.php';
session_start();

if ($_SESSION['role'] != 'admin') {
    header("Location: signin.php");
    exit();
}

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $perfume_name = $_POST['perfume_name'];
    $description = $_POST['description'];
    $price = $_POST['price'];

    // Insert perfume into the database
    $query = "INSERT INTO perfumes (perfume_name, description, price) VALUES ('$perfume_name', '$description', '$price')";
    if (mysqli_query($conn, $query)) {
        echo "Perfume added successfully!";
    } else {
        echo "Error: " . mysqli_error($conn);
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <title>Add Perfume</title>
</head>
<body>
    <h2>Add Perfume</h2>
    <form method="POST">
        <label>Perfume Name:</label>
        <input type="text" name="perfume_name" required>
        <br>
        <label>Description:</label>
        <textarea name="description" required></textarea>
        <br>
        <label>Price:</label>
        <input type="text" name="price" required>
        <br>
        <button type="submit">Add Perfume</button>
    </form>
</body>
</html>



=> insert perfume

INSERT INTO perfumes (perfume_name, description, price) 
VALUES 
('Chanel No. 5', 'A classic and elegant fragrance.', 120.00),
('Dior Sauvage', 'A fresh and spicy scent.', 95.00),
('Gucci Bloom', 'A floral fragrance for women.', 80.00);


=> 4. View Perfumes Page (view_perfumes.php)

<?php
include 'db_connect.php';

session_start();

if (!isset($_SESSION['user_id'])) {
    header("Location: signin.php");
    exit();
}

// Fetch all perfumes
$query = "SELECT * FROM perfumes";
$result = mysqli_query($conn, $query);
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <title>All Perfumes</title>
</head>
<body>
    <h2>Perfume Store</h2>
    <table border="1">
        <tr>
            <th>Perfume Name</th>
            <th>Description</th>
            <th>Price</th>
        </tr>
        <?php while ($row = mysqli_fetch_assoc($result)) { ?>
            <tr>
                <td><?php echo $row['perfume_name']; ?></td>
                <td><?php echo $row['description']; ?></td>
                <td><?php echo $row['price']; ?></td>
            </tr>
        <?php } ?>
    </table>
</body>
</html>



Step 3: Database Connection File (db_connect.php)

<?php
$host = "localhost";   // Replace with your DB host
$user = "root";        // Replace with your DB username
$pass = "";            // Replace with your DB password
$dbname = "perfume_store";  // Replace with your database name

$conn = mysqli_connect($host, $user, $pass, $dbname);

if (!$conn) {
    die("Database connection failed: " . mysqli_connect_error());
}
?>

/*
<?php 
 
 
$servername="localhost";
$username="root";
$password="";
$dbname="perfume_store";

$conn = mysqli_connect($servername,$username,$password,$dbname);
 if($conn){
	 echo"ok";
 }
 else{
	 echo "not ok";
 }
 
 ?>

*/


2).create a webpage for online sweet store using php for the different user.       
admin user:-  login page , add sweet
guest user:-search sweet based on price in php


database =>
CREATE DATABASE sweet_store;

USE sweet_store;

-- Table for storing sweets
CREATE TABLE sweets (
    id INT AUTO_INCREMENT PRIMARY KEY,
    sweet_name VARCHAR(100) NOT NULL,
    description TEXT NOT NULL,
    price DECIMAL(10, 2) NOT NULL
);

-- Table for storing admin users
CREATE TABLE admins (
    id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(50) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL
);


Step 2: Create the Admin Login Page
The admin can log in to manage the sweets. Here’s the PHP script for the admin login page.

=> Admin Login Page (admin_login.php)
<?php
include 'db_connect.php';

session_start();

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $username = $_POST['username'];
    $password = $_POST['password'];

    // Check if admin exists
    $query = "SELECT * FROM admins WHERE username = '$username'";
    $result = mysqli_query($conn, $query);
    $admin = mysqli_fetch_assoc($result);

    if ($admin && password_verify($password, $admin['password'])) {
        // Login successful
        $_SESSION['admin_id'] = $admin['id'];
        header("Location: add_sweet.php");
        exit();
    } else {
        echo "Invalid username or password!";
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <title>Admin Login</title>
</head>
<body>
    <h2>Admin Login</h2>
    <form method="POST">
        <label>Username:</label>
        <input type="text" name="username" required>
        <br>
        <label>Password:</label>
        <input type="password" name="password" required>
        <br>
        <button type="submit">Login</button>
    </form>
</body>
</html>

Step 3: Create the Add Sweet Page for Admin
This page allows the admin to add new sweets.

=> Add Sweet Page (add_sweet.php)

<?php
include 'db_connect.php';
session_start();

if (!isset($_SESSION['admin_id'])) {
    header("Location: admin_login.php");
    exit();
}

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $sweet_name = $_POST['sweet_name'];
    $description = $_POST['description'];
    $price = $_POST['price'];

    // Insert the new sweet into the database
    $query = "INSERT INTO sweets (sweet_name, description, price) VALUES ('$sweet_name', '$description', '$price')";
    if (mysqli_query($conn, $query)) {
        echo "Sweet added successfully!";
    } else {
        echo "Error: " . mysqli_error($conn);
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <title>Add Sweet</title>
</head>
<body>
    <h2>Add Sweet</h2>
    <form method="POST">
        <label>Sweet Name:</label>
        <input type="text" name="sweet_name" required>
        <br>
        <label>Description:</label>
        <textarea name="description" required></textarea>
        <br>
        <label>Price:</label>
        <input type="number" name="price" step="0.01" required>
        <br>
        <button type="submit">Add Sweet</button>
    </form>
</body>
</html>

Step 4: Create the Guest Search Page
Guests can search for sweets based on price. Here’s the PHP script for the search page.

=> Guest Search Page (search_sweets.php)
<?php
include 'db_connect.php';

$sweets = [];

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $price = $_POST['price'];

    // Query to search sweets based on the price
    $query = "SELECT * FROM sweets WHERE price <= $price";
    $result = mysqli_query($conn, $query);

    while ($row = mysqli_fetch_assoc($result)) {
        $sweets[] = $row;
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <title>Search Sweets by Price</title>
</head>
<body>
    <h2>Search Sweets</h2>
    <form method="POST">
        <label>Max Price:</label>
        <input type="number" name="price" step="0.01" required>
        <br>
        <button type="submit">Search</button>
    </form>

    <?php if (!empty($sweets)) { ?>
        <h3>Available Sweets:</h3>
        <ul>
            <?php foreach ($sweets as $sweet) { ?>
                <li>
                    <strong><?php echo $sweet['sweet_name']; ?></strong> - 
                    <?php echo $sweet['description']; ?> - 
                    $<?php echo $sweet['price']; ?>
                </li>
            <?php } ?>
        </ul>
    <?php } else if ($_SERVER['REQUEST_METHOD'] == 'POST') { ?>
        <p>No sweets found under that price.</p>
    <?php } ?>
</body>
</html>

Step 5: Create the Database Connection File
All pages need access to the database, so create a reusable database connection file.

=> Database Connection File (db_connect.php)

<?php
$host = "localhost";   // Replace with your DB host
$user = "root";        // Replace with your DB username
$pass = "";            // Replace with your DB password
$dbname = "sweet_store";  // Replace with your database name

$conn = mysqli_connect($host, $user, $pass, $dbname);

if (!$conn) {
    die("Database connection failed: " . mysqli_connect_error());
}
?>

=> 
Step 6: Insert Admin User and Sample Data
You need to manually insert an admin user and some sweets into the database.

Insert Admin User
To insert an admin user, use the following SQL query. Replace the password_hash with your desired password encrypted with PASSWORD_BCRYPT.


code :-
INSERT INTO admins (username, password) VALUES ('admin', '$2y$10$FjVwMkQO9H5ciLkpQeOzQeXUMMC8nhFgmgtnNckZmZvgN63FlxtSG');


=> insert sweet
INSERT INTO sweets (sweet_name, description, price) 
VALUES 
('Laddu', 'Traditional Indian sweet.', 5.00),
('Jalebi', 'Crispy, sweet, and syrupy.', 3.50),
('Barfi', 'Milk-based sweet.', 4.00);







3). 
create a webpage for "Tattoo shop" using php for the different user       
admin user:- add  tattoo designs , view contact us detail
guest user:- view tattoo designs , 
                   contact admin using his/her mobile number , email id and description


=> 
CREATE DATABASE tattoo_shop;

USE tattoo_shop;

-- Table to store tattoo designs
CREATE TABLE tattoos (
    id INT AUTO_INCREMENT PRIMARY KEY,
    design_name VARCHAR(100) NOT NULL,
    description TEXT NOT NULL,
    image_url VARCHAR(255) NOT NULL
);

-- Table for storing admin users
CREATE TABLE admins (
    id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(50) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL
);

-- Table to store guest contact messages
CREATE TABLE contact_us (
    id INT AUTO_INCREMENT PRIMARY KEY,
    mobile_no VARCHAR(15) NOT NULL,
    email VARCHAR(100) NOT NULL,
    description TEXT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

=> Step 2: Create Admin Login and Add Tattoo Pages

1. Admin Login Page (admin_login.php)



<?php
include 'db_connect.php';

session_start();

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $username = $_POST['username'];
    $password = $_POST['password'];

    // Query to check if the admin exists
    $query = "SELECT * FROM admins WHERE username = '$username'";
    $result = mysqli_query($conn, $query);
    $admin = mysqli_fetch_assoc($result);

    if ($admin && password_verify($password, $admin['password'])) {
        $_SESSION['admin_id'] = $admin['id'];
        header("Location: add_tattoo.php");
        exit();
    } else {
        echo "Invalid username or password!";
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <title>Admin Login</title>
</head>
<body>
    <h2>Admin Login</h2>
    <form method="POST">
        <label>Username:</label>
        <input type="text" name="username" required>
        <br>
        <label>Password:</label>
        <input type="password" name="password" required>
        <br>
        <button type="submit">Login</button>
    </form>
</body>
</html>

=> 2. Add Tattoo Design Page (add_tattoo.php)
<?php
include 'db_connect.php';
session_start();

if (!isset($_SESSION['admin_id'])) {
    header("Location: admin_login.php");
    exit();
}

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $design_name = $_POST['design_name'];
    $description = $_POST['description'];
    $image_url = $_POST['image_url'];

    // Insert the tattoo design into the database
    $query = "INSERT INTO tattoos (design_name, description, image_url) VALUES ('$design_name', '$description', '$image_url')";
    if (mysqli_query($conn, $query)) {
        echo "Tattoo design added successfully!";
    } else {
        echo "Error: " . mysqli_error($conn);
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <title>Add Tattoo Design</title>
</head>
<body>
    <h2>Add Tattoo Design</h2>
    <form method="POST">
        <label>Design Name:</label>
        <input type="text" name="design_name" required>
        <br>
        <label>Description:</label>
        <textarea name="description" required></textarea>
        <br>
        <label>Image URL:</label>
        <input type="text" name="image_url" required>
        <br>
        <button type="submit">Add Tattoo</button>
    </form>
</body>
</html>


=> 3. View Contact Us Details (view_contacts.php)

<?php
include 'db_connect.php';
session_start();

if (!isset($_SESSION['admin_id'])) {
    header("Location: admin_login.php");
    exit();
}

// Fetch all contact us messages
$query = "SELECT * FROM contact_us ORDER BY created_at DESC";
$result = mysqli_query($conn, $query);
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <title>Contact Us Messages</title>
</head>
<body>
    <h2>Contact Us Messages</h2>
    <table border="1">
        <tr>
            <th>Mobile Number</th>
            <th>Email</th>
            <th>Description</th>
            <th>Date</th>
        </tr>
        <?php while ($row = mysqli_fetch_assoc($result)) { ?>
            <tr>
                <td><?php echo $row['mobile_no']; ?></td>
                <td><?php echo $row['email']; ?></td>
                <td><?php echo $row['description']; ?></td>
                <td><?php echo $row['created_at']; ?></td>
            </tr>
        <?php } ?>
    </table>
</body>
</html>


=> Step 3: Create Guest Pages
1. View Tattoo Designs Page (view_tattoos.php)
<?php
include 'db_connect.php';

// Fetch all tattoo designs
$query = "SELECT * FROM tattoos";
$result = mysqli_query($conn, $query);
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <title>View Tattoo Designs</title>
</head>
<body>
    <h2>Available Tattoo Designs</h2>
    <table border="1">
        <tr>
            <th>Design Name</th>
            <th>Description</th>
            <th>Image</th>
        </tr>
        <?php while ($row = mysqli_fetch_assoc($result)) { ?>
            <tr>
                <td><?php echo $row['design_name']; ?></td>
                <td><?php echo $row['description']; ?></td>
                <td><img src="<?php echo $row['image_url']; ?>" alt="Tattoo Design" width="100"></td>
            </tr>
        <?php } ?>
    </table>
</body>
</html>

=> 2. Contact Us Form (contact_us.php)
<?php
include 'db_connect.php';

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $mobile_no = $_POST['mobile_no'];
    $email = $_POST['email'];
    $description = $_POST['description'];

    // Insert the contact message into the database
    $query = "INSERT INTO contact_us (mobile_no, email, description) VALUES ('$mobile_no', '$email', '$description')";
    if (mysqli_query($conn, $query)) {
        echo "Your message has been sent!";
    } else {
        echo "Error: " . mysqli_error($conn);
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <title>Contact Us</title>
</head>
<body>
    <h2>Contact Us</h2>
    <form method="POST">
        <label>Mobile Number:</label>
        <input type="text" name="mobile_no" required>
        <br>
        <label>Email:</label>
        <input type="email" name="email" required>
        <br>
        <label>Description:</label>
        <textarea name="description" required></textarea>
        <br>
        <button type="submit">Send Message</button>
    </form>
</body>
</html>

=> Step 4: Database Connection File (db_connect.php)
<?php
$host = "localhost";   // Replace with your DB host
$user = "root";        // Replace with your DB username
$pass = "";            // Replace with your DB password
$dbname = "tattoo_shop";  // Replace with your database name

$conn = mysqli_connect($host, $user, $pass, $dbname);

if (!$conn) {
    die("Database connection failed: " . mysqli_connect_error());
}
?>

=> Step 5: Insert Admin and Sample Data
INSERT INTO admins (username, password) 
VALUES ('admin', '$2y$10$FjVwMkQO9H5ciLkpQeOzQeXUMMC8nhFgmgtnNckZmZvgN63FlxtSG');


=> insert data
INSERT INTO tattoos (design_name, description, image_url) 
VALUES 
('Dragon Tattoo', 'A fierce dragon tattoo design.', 'images/dragon_tattoo.jpg'),
('Butterfly Tattoo', 'A delicate butterfly tattoo.', 'images/butterfly_tattoo.jpg');




4). create a website for gift shoping of gift items using php. that provide facilities like:-   a) accept ing different  items  from admin with all validation.     
b).  searching items according  to  category(chocolates , cards , etc.)  and price for user.


CREATE DATABASE gift_shop;

USE gift_shop;

-- Table for storing gift categories
CREATE TABLE categories (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100) NOT NULL
);

-- Table for storing gift items
CREATE TABLE gifts (
    id INT AUTO_INCREMENT PRIMARY KEY,
    item_name VARCHAR(100) NOT NULL,
    category_id INT NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    description TEXT,
    image_url VARCHAR(255),
    FOREIGN KEY (category_id) REFERENCES categories(id)
);

-- Table for storing admin login credentials
CREATE TABLE admin (
    id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(50) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL
);

=> 
To create a Gift Shopping Website using PHP, we will implement the following:

Admin Module:

Allows the admin to add gift items with validations.
Admin must log in to access the panel for adding items.
User Module:

Users can search gift items based on category (e.g., chocolates, cards) and price range.
Step-by-Step Guide:
Step 1: Database Setup
Create a database to store gift items and their categories.

Create Database and Tables
sql
Copy code
CREATE DATABASE gift_shop;

USE gift_shop;

-- Table for storing gift categories
CREATE TABLE categories (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100) NOT NULL
);

-- Table for storing gift items
CREATE TABLE gifts (
    id INT AUTO_INCREMENT PRIMARY KEY,
    item_name VARCHAR(100) NOT NULL,
    category_id INT NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    description TEXT,
    image_url VARCHAR(255),
    FOREIGN KEY (category_id) REFERENCES categories(id)
);

-- Table for storing admin login credentials
CREATE TABLE admin (
    id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(50) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL
);
Step 2: Admin Login and Add Gift Items Pages

1. Admin Login Page (admin_login.php)

<?php
include 'db_connect.php';

session_start();

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $username = $_POST['username'];
    $password = $_POST['password'];

    // Query to check if the admin exists
    $query = "SELECT * FROM admin WHERE username = '$username'";
    $result = mysqli_query($conn, $query);
    $admin = mysqli_fetch_assoc($result);

    if ($admin && password_verify($password, $admin['password'])) {
        $_SESSION['admin_id'] = $admin['id'];
        header("Location: add_gift.php");
        exit();
    } else {
        echo "Invalid username or password!";
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <title>Admin Login</title>
</head>
<body>
    <h2>Admin Login</h2>
    <form method="POST">
        <label>Username:</label>
        <input type="text" name="username" required>
        <br>
        <label>Password:</label>
        <input type="password" name="password" required>
        <br>
        <button type="submit">Login</button>
    </form>
</body>
</html>

=> 2. Add Gift Items Page (add_gift.php)

<?php
include 'db_connect.php';
session_start();

if (!isset($_SESSION['admin_id'])) {
    header("Location: admin_login.php");
    exit();
}

// Fetch categories to show in dropdown
$category_query = "SELECT * FROM categories";
$category_result = mysqli_query($conn, $category_query);

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $item_name = $_POST['item_name'];
    $category_id = $_POST['category_id'];
    $price = $_POST['price'];
    $description = $_POST['description'];
    $image_url = $_POST['image_url'];

    // Validation
    if (empty($item_name) || empty($category_id) || empty($price) || !is_numeric($price)) {
        echo "Please fill all fields correctly.";
    } else {
        // Insert the new gift item into the database
        $query = "INSERT INTO gifts (item_name, category_id, price, description, image_url) 
                  VALUES ('$item_name', '$category_id', '$price', '$description', '$image_url')";
        if (mysqli_query($conn, $query)) {
            echo "Gift item added successfully!";
        } else {
            echo "Error: " . mysqli_error($conn);
        }
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <title>Add Gift Item</title>
</head>
<body>
    <h2>Add Gift Item</h2>
    <form method="POST">
        <label>Item Name:</label>
        <input type="text" name="item_name" required>
        <br>
        <label>Category:</label>
        <select name="category_id" required>
            <?php while ($category = mysqli_fetch_assoc($category_result)) { ?>
                <option value="<?php echo $category['id']; ?>"><?php echo $category['name']; ?></option>
            <?php } ?>
        </select>
        <br>
        <label>Price:</label>
        <input type="text" name="price" required>
        <br>
        <label>Description:</label>
        <textarea name="description"></textarea>
        <br>
        <label>Image URL:</label>
        <input type="text" name="image_url">
        <br>
        <button type="submit">Add Gift</button>
    </form>
</body>
</html>

=> Step 3: User Search and Display Pages

1. Search Gifts by Category and Price (search_gifts.php)
<?php
include 'db_connect.php';

// Fetch categories for the search form
$category_query = "SELECT * FROM categories";
$category_result = mysqli_query($conn, $category_query);

$gifts = [];

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $category_id = $_POST['category_id'];
    $min_price = $_POST['min_price'];
    $max_price = $_POST['max_price'];

    // Construct query to fetch gifts based on search criteria
    $query = "SELECT * FROM gifts WHERE category_id = '$category_id' AND price BETWEEN '$min_price' AND '$max_price'";
    $gifts_result = mysqli_query($conn, $query);

    while ($row = mysqli_fetch_assoc($gifts_result)) {
        $gifts[] = $row;
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <title>Search Gifts</title>
</head>
<body>
    <h2>Search for Gifts</h2>
    <form method="POST">
        <label>Category:</label>
        <select name="category_id" required>
            <?php while ($category = mysqli_fetch_assoc($category_result)) { ?>
                <option value="<?php echo $category['id']; ?>"><?php echo $category['name']; ?></option>
            <?php } ?>
        </select>
        <br>
        <label>Min Price:</label>
        <input type="text" name="min_price" required>
        <br>
        <label>Max Price:</label>
        <input type="text" name="max_price" required>
        <br>
        <button type="submit">Search</button>
    </form>

    <?php if (!empty($gifts)) { ?>
        <h3>Gift Items:</h3>
        <table border="1">
            <tr>
                <th>Item Name</th>
                <th>Price</th>
                <th>Description</th>
                <th>Image</th>
            </tr>
            <?php foreach ($gifts as $gift) { ?>
                <tr>
                    <td><?php echo $gift['item_name']; ?></td>
                    <td><?php echo $gift['price']; ?></td>
                    <td><?php echo $gift['description']; ?></td>
                    <td><img src="<?php echo $gift['image_url']; ?>" width="100"></td>
                </tr>
            <?php } ?>
        </table>
    <?php } ?>
</body>
</html>

=> Step 4: Database Connection File (db_connect.php)

<?php
$host = "localhost";   // Replace with your DB host
$user = "root";        // Replace with your DB username
$pass = "";            // Replace with your DB password
$dbname = "gift_shop";  // Replace with your database name

$conn = mysqli_connect($host, $user, $pass, $dbname);

if (!$conn) {
    die("Database connection failed: " . mysqli_connect_error());
}
?>

=> 
To create a Gift Shopping Website using PHP, we will implement the following:

Admin Module:

Allows the admin to add gift items with validations.
Admin must log in to access the panel for adding items.
User Module:

Users can search gift items based on category (e.g., chocolates, cards) and price range.
Step-by-Step Guide:
Step 1: Database Setup
Create a database to store gift items and their categories.

Create Database and Tables
sql
Copy code
CREATE DATABASE gift_shop;

USE gift_shop;

-- Table for storing gift categories
CREATE TABLE categories (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100) NOT NULL
);

-- Table for storing gift items
CREATE TABLE gifts (
    id INT AUTO_INCREMENT PRIMARY KEY,
    item_name VARCHAR(100) NOT NULL,
    category_id INT NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    description TEXT,
    image_url VARCHAR(255),
    FOREIGN KEY (category_id) REFERENCES categories(id)
);

-- Table for storing admin login credentials
CREATE TABLE admin (
    id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(50) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL
);
Step 2: Admin Login and Add Gift Items Pages
1. Admin Login Page (admin_login.php)
This page allows the admin to log in and access the dashboard.

php
Copy code
<?php
include 'db_connect.php';

session_start();

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $username = $_POST['username'];
    $password = $_POST['password'];

    // Query to check if the admin exists
    $query = "SELECT * FROM admin WHERE username = '$username'";
    $result = mysqli_query($conn, $query);
    $admin = mysqli_fetch_assoc($result);

    if ($admin && password_verify($password, $admin['password'])) {
        $_SESSION['admin_id'] = $admin['id'];
        header("Location: add_gift.php");
        exit();
    } else {
        echo "Invalid username or password!";
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <title>Admin Login</title>
</head>
<body>
    <h2>Admin Login</h2>
    <form method="POST">
        <label>Username:</label>
        <input type="text" name="username" required>
        <br>
        <label>Password:</label>
        <input type="password" name="password" required>
        <br>
        <button type="submit">Login</button>
    </form>
</body>
</html>
2. Add Gift Items Page (add_gift.php)
Admin can add new gift items after logging in.

php
Copy code
<?php
include 'db_connect.php';
session_start();

if (!isset($_SESSION['admin_id'])) {
    header("Location: admin_login.php");
    exit();
}

// Fetch categories to show in dropdown
$category_query = "SELECT * FROM categories";
$category_result = mysqli_query($conn, $category_query);

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $item_name = $_POST['item_name'];
    $category_id = $_POST['category_id'];
    $price = $_POST['price'];
    $description = $_POST['description'];
    $image_url = $_POST['image_url'];

    // Validation
    if (empty($item_name) || empty($category_id) || empty($price) || !is_numeric($price)) {
        echo "Please fill all fields correctly.";
    } else {
        // Insert the new gift item into the database
        $query = "INSERT INTO gifts (item_name, category_id, price, description, image_url) 
                  VALUES ('$item_name', '$category_id', '$price', '$description', '$image_url')";
        if (mysqli_query($conn, $query)) {
            echo "Gift item added successfully!";
        } else {
            echo "Error: " . mysqli_error($conn);
        }
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <title>Add Gift Item</title>
</head>
<body>
    <h2>Add Gift Item</h2>
    <form method="POST">
        <label>Item Name:</label>
        <input type="text" name="item_name" required>
        <br>
        <label>Category:</label>
        <select name="category_id" required>
            <?php while ($category = mysqli_fetch_assoc($category_result)) { ?>
                <option value="<?php echo $category['id']; ?>"><?php echo $category['name']; ?></option>
            <?php } ?>
        </select>
        <br>
        <label>Price:</label>
        <input type="text" name="price" required>
        <br>
        <label>Description:</label>
        <textarea name="description"></textarea>
        <br>
        <label>Image URL:</label>
        <input type="text" name="image_url">
        <br>
        <button type="submit">Add Gift</button>
    </form>
</body>
</html>
Step 3: User Search and Display Pages
1. Search Gifts by Category and Price (search_gifts.php)
This page allows users to search for gift items based on their category and price range.

php
Copy code
<?php
include 'db_connect.php';

// Fetch categories for the search form
$category_query = "SELECT * FROM categories";
$category_result = mysqli_query($conn, $category_query);

$gifts = [];

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $category_id = $_POST['category_id'];
    $min_price = $_POST['min_price'];
    $max_price = $_POST['max_price'];

    // Construct query to fetch gifts based on search criteria
    $query = "SELECT * FROM gifts WHERE category_id = '$category_id' AND price BETWEEN '$min_price' AND '$max_price'";
    $gifts_result = mysqli_query($conn, $query);

    while ($row = mysqli_fetch_assoc($gifts_result)) {
        $gifts[] = $row;
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <title>Search Gifts</title>
</head>
<body>
    <h2>Search for Gifts</h2>
    <form method="POST">
        <label>Category:</label>
        <select name="category_id" required>
            <?php while ($category = mysqli_fetch_assoc($category_result)) { ?>
                <option value="<?php echo $category['id']; ?>"><?php echo $category['name']; ?></option>
            <?php } ?>
        </select>
        <br>
        <label>Min Price:</label>
        <input type="text" name="min_price" required>
        <br>
        <label>Max Price:</label>
        <input type="text" name="max_price" required>
        <br>
        <button type="submit">Search</button>
    </form>

    <?php if (!empty($gifts)) { ?>
        <h3>Gift Items:</h3>
        <table border="1">
            <tr>
                <th>Item Name</th>
                <th>Price</th>
                <th>Description</th>
                <th>Image</th>
            </tr>
            <?php foreach ($gifts as $gift) { ?>
                <tr>
                    <td><?php echo $gift['item_name']; ?></td>
                    <td><?php echo $gift['price']; ?></td>
                    <td><?php echo $gift['description']; ?></td>
                    <td><img src="<?php echo $gift['image_url']; ?>" width="100"></td>
                </tr>
            <?php } ?>
        </table>
    <?php } ?>
</body>
</html>
Step 4: Database Connection File (db_connect.php)
Here’s a reusable PHP file to connect to the database.

php
Copy code
<?php
$host = "localhost";   // Replace with your DB host
$user = "root";        // Replace with your DB username
$pass = "";            // Replace with your DB password
$dbname = "gift_shop";  // Replace with your database name

$conn = mysqli_connect($host, $user, $pass, $dbname);

if (!$conn) {
    die("Database connection failed: " . mysqli_connect_error());
}
?>


Step 5: Insert Admin and Category Data
Insert admin and category data for gifts.

Insert Admin User
Use this SQL query to add an admin user:

INSERT INTO admin (username, password) 
VALUES ('admin', '$2y$10$5g/aLOA5Bp4cFzTLn6Oh3Ot7FgLxSYgTy.0LPsqLBuLsz9RhnRUve');  -- password is "admin"

=> Insert Categories

INSERT INTO categories (name) 
VALUES ('Chocolates'), ('Cards'), ('Flowers'), ('Toys'), ('Gift Baskets');



5). create a website using php for "online bike service management " which maintain information like service type, date ,time , customer_name  , model_name , etc. in database.                             
provide facility:-  booking service , cancel booking , search for service history

CREATE DATABASE bike_service;

USE bike_service;

-- Table for storing service types
CREATE TABLE service_types (
    id INT AUTO_INCREMENT PRIMARY KEY,
    type_name VARCHAR(100) NOT NULL
);

-- Table for storing customer service bookings
CREATE TABLE service_bookings (
    id INT AUTO_INCREMENT PRIMARY KEY,
    customer_name VARCHAR(100) NOT NULL,
    model_name VARCHAR(100) NOT NULL,
    service_type_id INT NOT NULL,
    booking_date DATE NOT NULL,
    booking_time TIME NOT NULL,
    status ENUM('Booked', 'Cancelled') DEFAULT 'Booked',
    FOREIGN KEY (service_type_id) REFERENCES service_types(id)
);


To create an Online Bike Service Management website using PHP, we will implement the following features:

Service Management:
Add service types (e.g., oil change, tire rotation).
Allow customers to book, cancel, and search for their service history.
Step-by-Step Guide:
Step 1: Database Setup
Create a database to store service information and customer details.

Create Database and Tables
sql
Copy code
CREATE DATABASE bike_service;

USE bike_service;

-- Table for storing service types
CREATE TABLE service_types (
    id INT AUTO_INCREMENT PRIMARY KEY,
    type_name VARCHAR(100) NOT NULL
);

-- Table for storing customer service bookings
CREATE TABLE service_bookings (
    id INT AUTO_INCREMENT PRIMARY KEY,
    customer_name VARCHAR(100) NOT NULL,
    model_name VARCHAR(100) NOT NULL,
    service_type_id INT NOT NULL,
    booking_date DATE NOT NULL,
    booking_time TIME NOT NULL,
    status ENUM('Booked', 'Cancelled') DEFAULT 'Booked',
    FOREIGN KEY (service_type_id) REFERENCES service_types(id)
);


Step 2: PHP Files Structure
Create the following PHP files in your project directory:

db_connect.php: To handle database connections.
add_service.php: To add service types (for admin).
book_service.php: To book a service.
cancel_service.php: To cancel a booking.
service_history.php: To view service history.
admin_login.php: To log in as an admin (if necessary).

Step 3: Database Connection File (db_connect.php)

<?php
$host = "localhost";   // Replace with your DB host
$user = "root";        // Replace with your DB username
$pass = "";            // Replace with your DB password
$dbname = "bike_service";  // Replace with your database name

$conn = mysqli_connect($host, $user, $pass, $dbname);

if (!$conn) {
    die("Database connection failed: " . mysqli_connect_error());
}
?>

Step 4: Add Service Types (add_service.php)

<?php
include 'db_connect.php';

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $type_name = $_POST['type_name'];

    // Validation
    if (empty($type_name)) {
        echo "Please enter a service type.";
    } else {
        // Insert the new service type into the database
        $query = "INSERT INTO service_types (type_name) VALUES ('$type_name')";
        if (mysqli_query($conn, $query)) {
            echo "Service type added successfully!";
        } else {
            echo "Error: " . mysqli_error($conn);
        }
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <title>Add Service Type</title>
</head>
<body>
    <h2>Add Service Type</h2>
    <form method="POST">
        <label>Service Type Name:</label>
        <input type="text" name="type_name" required>
        <br>
        <button type="submit">Add Service</button>
    </form>
</body>
</html>

Step 5: Book a Service (book_service.php)

<?php
include 'db_connect.php';

$service_types = mysqli_query($conn, "SELECT * FROM service_types");

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $customer_name = $_POST['customer_name'];
    $model_name = $_POST['model_name'];
    $service_type_id = $_POST['service_type_id'];
    $booking_date = $_POST['booking_date'];
    $booking_time = $_POST['booking_time'];

    // Validation
    if (empty($customer_name) || empty($model_name) || empty($service_type_id) || empty($booking_date) || empty($booking_time)) {
        echo "Please fill all fields.";
    } else {
        // Insert booking into the database
        $query = "INSERT INTO service_bookings (customer_name, model_name, service_type_id, booking_date, booking_time) 
                  VALUES ('$customer_name', '$model_name', '$service_type_id', '$booking_date', '$booking_time')";
        if (mysqli_query($conn, $query)) {
            echo "Service booked successfully!";
        } else {
            echo "Error: " . mysqli_error($conn);
        }
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <title>Book Service</title>
</head>
<body>
    <h2>Book a Bike Service</h2>
    <form method="POST">
        <label>Customer Name:</label>
        <input type="text" name="customer_name" required>
        <br>
        <label>Model Name:</label>
        <input type="text" name="model_name" required>
        <br>
        <label>Service Type:</label>
        <select name="service_type_id" required>
            <?php while ($service_type = mysqli_fetch_assoc($service_types)) { ?>
                <option value="<?php echo $service_type['id']; ?>"><?php echo $service_type['type_name']; ?></option>
            <?php } ?>
        </select>
        <br>
        <label>Booking Date:</label>
        <input type="date" name="booking_date" required>
        <br>
        <label>Booking Time:</label>
        <input type="time" name="booking_time" required>
        <br>
        <button type="submit">Book Service</button>
    </form>
</body>
</html>


Step 6: Cancel a Booking (cancel_service.php)

<?php
include 'db_connect.php';

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $booking_id = $_POST['booking_id'];

    // Update the booking status to Cancelled
    $query = "UPDATE service_bookings SET status='Cancelled' WHERE id='$booking_id'";
    if (mysqli_query($conn, $query)) {
        echo "Booking cancelled successfully!";
    } else {
        echo "Error: " . mysqli_error($conn);
    }
}

// Fetch all bookings for the customer
$bookings = mysqli_query($conn, "SELECT * FROM service_bookings WHERE status='Booked'");
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <title>Cancel Service</title>
</head>
<body>
    <h2>Cancel a Booking</h2>
    <form method="POST">
        <label>Select Booking:</label>
        <select name="booking_id" required>
            <?php while ($booking = mysqli_fetch_assoc($bookings)) { ?>
                <option value="<?php echo $booking['id']; ?>">
                    <?php echo $booking['customer_name'] . " - " . $booking['model_name'] . " on " . $booking['booking_date'] . " at " . $booking['booking_time']; ?>
                </option>
            <?php } ?>
        </select>
        <br>
        <button type="submit">Cancel Booking</button>
    </form>
</body>
</html>


Step 7: Service History (service_history.php)

<?php
include 'db_connect.php';

$customer_name = '';

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $customer_name = $_POST['customer_name'];
}

// Fetch service history for the customer
$query = "SELECT sb.*, st.type_name FROM service_bookings sb 
          JOIN service_types st ON sb.service_type_id = st.id 
          WHERE sb.customer_name LIKE '%$customer_name%'";
$history_result = mysqli_query($conn, $query);
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <title>Service History</title>
</head>
<body>
    <h2>Service History</h2>
    <form method="POST">
        <label>Customer Name:</label>
        <input type="text" name="customer_name" value="<?php echo $customer_name; ?>" required>
        <button type="submit">Search</button>
    </form>

    <?php if (mysqli_num_rows($history_result) > 0) { ?>
        <table border="1">
            <tr>
                <th>Customer Name</th>
                <th>Model Name</th>
                <th>Service Type</th>
                <th>Booking Date</th>
                <th>Booking Time</th>
                <th>Status</th>
            </tr>
            <?php while ($row = mysqli_fetch_assoc($history_result)) { ?>
                <tr>
                    <td><?php echo $row['customer_name']; ?></td>
                    <td><?php echo $row['model_name']; ?></td>
                    <td><?php echo $row['type_name']; ?></td>
                    <td><?php echo $row['booking_date']; ?></td>
                    <td><?php echo $row['booking_time']; ?></td>
                    <td><?php echo $row['status']; ?></td>
                </tr>
            <?php } ?>
        </table>
    <?php } else { ?>
        <p>No service history found.</p>
    <?php } ?>
</body>
</html>

6). real state system 

database:-
CREATE DATABASE real_estate;

USE real_estate;

-- Table for storing user roles
CREATE TABLE users (
    id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(100) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    role ENUM('admin', 'agent', 'user') DEFAULT 'user'
);

-- Table for storing property listings
CREATE TABLE properties (
    id INT AUTO_INCREMENT PRIMARY KEY,
    title VARCHAR(100) NOT NULL,
    description TEXT NOT NULL,
    location VARCHAR(100) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    image VARCHAR(255) DEFAULT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

=> 2. File Structure
Create the following PHP files in your project directory:

db_connect.php: Database connection.
register.php: User registration.
login.php: User login.
add_property.php: Add new property listings.
edit_property.php: Edit existing property listings.
delete_property.php: Delete property listings.
view_properties.php: View property listings.
search_properties.php: Search for properties.



=> 3. Database Connection File (db_connect.php)
<?php
$host = "localhost";   // Replace with your DB host
$user = "root";        // Replace with your DB username
$pass = "";            // Replace with your DB password
$dbname = "real_estate";  // Replace with your database name

$conn = mysqli_connect($host, $user, $pass, $dbname);

if (!$conn) {
    die("Database connection failed: " . mysqli_connect_error());
}
?>
=> 4. User Registration (register.php)
<?php
include 'db_connect.php';

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $username = $_POST['username'];
    $password = password_hash($_POST['password'], PASSWORD_DEFAULT);
    $role = $_POST['role'];

    // Insert the new user into the database
    $query = "INSERT INTO users (username, password, role) VALUES ('$username', '$password', '$role')";
    if (mysqli_query($conn, $query)) {
        echo "User registered successfully!";
    } else {
        echo "Error: " . mysqli_error($conn);
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <title>Register</title>
</head>
<body>
    <h2>Register</h2>
    <form method="POST">
        <label>Username:</label>
        <input type="text" name="username" required>
        <br>
        <label>Password:</label>
        <input type="password" name="password" required>
        <br>
        <label>Role:</label>
        <select name="role" required>
            <option value="agent">Agent</option>
            <option value="admin">Admin</option>
            <option value="user">User</option>
        </select>
        <br>
        <button type="submit">Register</button>
    </form>
</body>
</html>

=> 5. User Login (login.php)
<?php
session_start();
include 'db_connect.php';

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $username = $_POST['username'];
    $password = $_POST['password'];

    // Check credentials
    $query = "SELECT * FROM users WHERE username='$username'";
    $result = mysqli_query($conn, $query);
    if ($result && mysqli_num_rows($result) > 0) {
        $user = mysqli_fetch_assoc($result);
        if (password_verify($password, $user['password'])) {
            $_SESSION['user_id'] = $user['id'];
            $_SESSION['role'] = $user['role'];
            header("Location: view_properties.php");
            exit();
        } else {
            echo "Invalid password.";
        }
    } else {
        echo "User not found.";
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <title>Login</title>
</head>
<body>
    <h2>Login</h2>
    <form method="POST">
        <label>Username:</label>
        <input type="text" name="username" required>
        <br>
        <label>Password:</label>
        <input type="password" name="password" required>
        <br>
        <button type="submit">Login</button>
    </form>
</body>
</html>

=> 6. Add Property (add_property.php)
<?php
session_start();
include 'db_connect.php';

if ($_SESSION['role'] !== 'admin' && $_SESSION['role'] !== 'agent') {
    header("Location: login.php");
    exit();
}

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $title = $_POST['title'];
    $description = $_POST['description'];
    $location = $_POST['location'];
    $price = $_POST['price'];

    // Handle image upload
    $image = '';
    if (isset($_FILES['image']) && $_FILES['image']['error'] == 0) {
        $target_dir = "uploads/";
        $target_file = $target_dir . basename($_FILES["image"]["name"]);
        move_uploaded_file($_FILES["image"]["tmp_name"], $target_file);
        $image = $target_file;
    }

    // Insert property into the database
    $query = "INSERT INTO properties (title, description, location, price, image) 
              VALUES ('$title', '$description', '$location', '$price', '$image')";
    if (mysqli_query($conn, $query)) {
        echo "Property added successfully!";
    } else {
        echo "Error: " . mysqli_error($conn);
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <title>Add Property</title>
</head>
<body>
    <h2>Add Property</h2>
    <form method="POST" enctype="multipart/form-data">
        <label>Title:</label>
        <input type="text" name="title" required>
        <br>
        <label>Description:</label>
        <textarea name="description" required></textarea>
        <br>
        <label>Location:</label>
        <input type="text" name="location" required>
        <br>
        <label>Price:</label>
        <input type="number" name="price" required>
        <br>
        <label>Image:</label>
        <input type="file" name="image" required>
        <br>
        <button type="submit">Add Property</button>
    </form>
</body>
</html>

=> 7. View Properties (view_properties.php)
<?php
include 'db_connect.php';

$query = "SELECT * FROM properties";
$result = mysqli_query($conn, $query);
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <title>View Properties</title>
</head>
<body>
    <h2>Available Properties</h2>
    <table border="1">
        <tr>
            <th>Title</th>
            <th>Description</th>
            <th>Location</th>
            <th>Price</th>
            <th>Image</th>
            <th>Actions</th>
        </tr>
        <?php while ($property = mysqli_fetch_assoc($result)) { ?>
            <tr>
                <td><?php echo $property['title']; ?></td>
                <td><?php echo $property['description']; ?></td>
                <td><?php echo $property['location']; ?></td>
                <td><?php echo $property['price']; ?></td>
                <td><img src="<?php echo $property['image']; ?>" width="100" height="100"></td>
                <td>
                    <a href="edit_property.php?id=<?php echo $property['id']; ?>">Edit</a>
                    <a href="delete_property.php?id=<?php echo $property['id']; ?>">Delete</a>
                </td>
            </tr>
        <?php } ?>
    </table>
</body>
</html>

=> 8. Edit Property (edit_property.php)

<?php
session_start();
include 'db_connect.php';

if ($_SESSION['role'] !== 'admin' && $_SESSION['role'] !== 'agent') {
    header("Location: login.php");
    exit();
}

$id = $_GET['id'];
$query = "SELECT * FROM properties WHERE id=$id";
$result = mysqli_query($conn, $query);
$property = mysqli_fetch_assoc($result);

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $title = $_POST['title'];
    $description = $_POST['description'];
    $location = $_POST['location'];
    $price = $_POST['price'];

    // Handle image upload if a new image is provided
    if (isset($_FILES['image']) && $_FILES['image']['error'] == 0) {
        $target_dir = "uploads/";
        $target_file = $target_dir . basename($_FILES["image"]["name"]);
        move_uploaded_file($_FILES["image"]["tmp_name"], $target_file);
        $image = $target_file;
        $query = "UPDATE properties SET title='$title', description='$description', location='$location', price='$price', image='$image' WHERE id=$id";
    } else {
        $query = "UPDATE properties SET title='$title', description='$description', location='$location', price='$price' WHERE id=$id";
    }

    if (mysqli_query($conn, $query)) {
        echo "Property updated successfully!";
        header("Location: view_properties.php");
        exit();
    } else {
        echo "Error: " . mysqli_error($conn);
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <title>Edit Property</title>
</head>
<body>
    <h2>Edit Property</h2>
    <form method="POST" enctype="multipart/form-data">
        <label>Title:</label>
        <input type="text" name="title" value="<?php echo $property['title']; ?>" required>
        <br>
        <label>Description:</label>
        <textarea name="description" required><?php echo $property['description']; ?></textarea>
        <br>
        <label>Location:</label>
        <input type="text" name="location" value="<?php echo $property['location']; ?>" required>
        <br>
        <label>Price:</label>
        <input type="number" name="price" value="<?php echo $property['price']; ?>" required>
        <br>
        <label>Image:</label>
        <input type="file" name="image">
        <br>
        <button type="submit">Update Property</button>
    </form>
</body>
</html>

=>9. Delete Property (delete_property.php)

<?php
session_start();
include 'db_connect.php';

if ($_SESSION['role'] !== 'admin' && $_SESSION['role'] !== 'agent') {
    header("Location: login.php");
    exit();
}

$id = $_GET['id'];
$query = "DELETE FROM properties WHERE id=$id";
if (mysqli_query($conn, $query)) {
    echo "Property deleted successfully!";
} else {
    echo "Error: " . mysqli_error($conn);
}

header("Location: view_properties.php");
exit();
?>

=> 10. Search Properties (search_properties.php)
<?php
include 'db_connect.php';

$searchQuery = "";
if (isset($_GET['search'])) {
    $searchQuery = $_GET['search'];
}

$query = "SELECT * FROM properties WHERE title LIKE '%$searchQuery%' OR location LIKE '%$searchQuery%'";
$result = mysqli_query($conn, $query);
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <title>Search Properties</title>
</head>
<body>
    <h2>Search Properties</h2>
    <form method="GET">
        <input type="text" name="search" placeholder="Search by title or location" value="<?php echo $searchQuery; ?>">
        <button type="submit">Search</button>
    </form>

    <table border="1">
        <tr>
            <th>Title</th>
            <th>Description</th>
            <th>Location</th>
            <th>Price</th>
            <th>Image</th>
        </tr>
        <?php while ($property = mysqli_fetch_assoc($result)) { ?>
            <tr>
                <td><?php echo $property['title']; ?></td>
                <td><?php echo $property['description']; ?></td>
                <td><?php echo $property['location']; ?></td>
                <td><?php echo $property['price']; ?></td>
                <td><img src="<?php echo $property['image']; ?>" width="100" height="100"></td>
            </tr>
        <?php } ?>
    </table>
</body>
</html>


output- 
view 

Title	Description	Location	Price	Image	Actions
Beautiful Home	3 bed, 2 bath house	New York	$300,000	
[Edit] [Delete]
Cozy Apartment	2 bed apartment	Los Angeles	$200,000	
[Edit] [Delete]





7). Write a PHP code which accept details for Movie ticket booking for	
	BOOK!NG_MST	[40]
	(Booking_id, BookiRg_date,booking_name,no_of_tickets, price).	
	Create database and provide facility to insert, update and delete for	
	the given table using form. Provide appropriate validations and	
	generate bill according to quantity of tickets.	

=> 
  database:-
CREATE DATABASE movie_ticket_booking;
USE movie_ticket_booking;

CREATE TABLE BOOKING_MST (
    booking_id INT AUTO_INCREMENT PRIMARY KEY,
    booking_date DATE NOT NULL,
    booking_name VARCHAR(100) NOT NULL,
    no_of_tickets INT NOT NULL,
    price DECIMAL(10, 2) NOT NULL
);


1. Database Connection (db_connect.php)
<?php
$servername = "localhost";
$username = "root";  // Your database username
$password = "";      // Your database password
$dbname = "movie_ticket_booking";  // Your database name

// Create connection
$conn = mysqli_connect($servername, $username, $password, $dbname);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}
?>

2. Insert, Update, Delete Operations (ticket_booking.php)
<?php
include 'db_connect.php';

// Initialize variables
$booking_id = $booking_date = $booking_name = $no_of_tickets = $price = "";
$errors = [];
$success_message = "";

// Handle form submission for insertion and update
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $booking_date = mysqli_real_escape_string($conn, $_POST['booking_date']);
    $booking_name = mysqli_real_escape_string($conn, $_POST['booking_name']);
    $no_of_tickets = (int)$_POST['no_of_tickets'];
    $price = (float)$_POST['price'];

    // Validation
    if (empty($booking_date) || empty($booking_name) || $no_of_tickets <= 0 || $price <= 0) {
        $errors[] = "All fields are required, and number of tickets and price must be greater than 0.";
    }

    if (empty($errors)) {
        if (isset($_POST['insert'])) {
            // Insert booking
            $query = "INSERT INTO BOOKING_MST (booking_date, booking_name, no_of_tickets, price)
                      VALUES ('$booking_date', '$booking_name', $no_of_tickets, $price)";
            if (mysqli_query($conn, $query)) {
                $success_message = "Booking inserted successfully!";
            } else {
                $errors[] = "Error: " . mysqli_error($conn);
            }
        } elseif (isset($_POST['update'])) {
            // Update booking
            $booking_id = (int)$_POST['booking_id'];
            $query = "UPDATE BOOKING_MST SET booking_date='$booking_date', booking_name='$booking_name',
                      no_of_tickets=$no_of_tickets, price=$price WHERE booking_id=$booking_id";
            if (mysqli_query($conn, $query)) {
                $success_message = "Booking updated successfully!";
            } else {
                $errors[] = "Error: " . mysqli_error($conn);
            }
        }
    }
}

// Handle delete operation
if (isset($_GET['delete'])) {
    $booking_id = (int)$_GET['delete'];
    $query = "DELETE FROM BOOKING_MST WHERE booking_id=$booking_id";
    if (mysqli_query($conn, $query)) {
        $success_message = "Booking deleted successfully!";
    } else {
        $errors[] = "Error: " . mysqli_error($conn);
    }
}

// Fetch all bookings
$bookings = mysqli_query($conn, "SELECT * FROM BOOKING_MST");

?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Movie Ticket Booking</title>
</head>
<body>
    <h2>Movie Ticket Booking</h2>

    <?php if (!empty($errors)) : ?>
        <div style="color: red;">
            <?php foreach ($errors as $error) {
                echo $error . "<br>";
            } ?>
        </div>
    <?php endif; ?>

    <?php if ($success_message) : ?>
        <div style="color: green;">
            <?php echo $success_message; ?>
        </div>
    <?php endif; ?>

    <form method="POST" action="">
        <input type="hidden" name="booking_id" value="<?php echo $booking_id; ?>">
        <label>Booking Date:</label>
        <input type="date" name="booking_date" value="<?php echo $booking_date; ?>" required><br>

        <label>Booking Name:</label>
        <input type="text" name="booking_name" value="<?php echo $booking_name; ?>" required><br>

        <label>No. of Tickets:</label>
        <input type="number" name="no_of_tickets" value="<?php echo $no_of_tickets; ?>" required><br>

        <label>Price per Ticket:</label>
        <input type="number" step="0.01" name="price" value="<?php echo $price; ?>" required><br><br>

        <button type="submit" name="insert">Insert Booking</button>
        <button type="submit" name="update">Update Booking</button>
    </form>

    <h3>Booking List</h3>
    <table border="1">
        <tr>
            <th>ID</th>
            <th>Booking Date</th>
            <th>Booking Name</th>
            <th>No. of Tickets</th>
            <th>Price per Ticket</th>
            <th>Total Price</th>
            <th>Actions</th>
        </tr>
        <?php while ($row = mysqli_fetch_assoc($bookings)) : ?>
            <tr>
                <td><?php echo $row['booking_id']; ?></td>
                <td><?php echo $row['booking_date']; ?></td>
                <td><?php echo $row['booking_name']; ?></td>
                <td><?php echo $row['no_of_tickets']; ?></td>
                <td><?php echo $row['price']; ?></td>
                <td><?php echo $row['no_of_tickets'] * $row['price']; ?></td>
                <td>
                    <a href="?delete=<?php echo $row['booking_id']; ?>">Delete</a>
                </td>
            </tr>
        <?php endwhile; ?>
    </table>
</body>
</html>


8).	Develop a PHP web site for library Management with following functionalities.	[40]
a.	Insert, Update and Delete Book Details.
b.	Display the details of books author wise, title wise, and price wise.
c.	Display books having maximum number of copies.
d.	Apply necessary validations.


=> 
CREATE DATABASE library_management;
USE library_management;

CREATE TABLE books (
    id INT AUTO_INCREMENT PRIMARY KEY,
    title VARCHAR(100) NOT NULL,
    author VARCHAR(100) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    copies INT NOT NULL
);

=> 1. Database Connection (db_connect.php)

   <?php
$servername = "localhost";
$username = "root"; // Your database username
$password = ""; // Your database password
$dbname = "library_management"; // Your database name

// Create connection
$conn = mysqli_connect($servername, $username, $password, $dbname);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}
?>

=> 2. Library Management System (library_management.php)
    <?php
include 'db_connect.php';

// Initialize variables
$id = $title = $author = $price = $copies = "";
$errors = [];
$success_message = "";

// Handle form submission for insert and update
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $title = mysqli_real_escape_string($conn, $_POST['title']);
    $author = mysqli_real_escape_string($conn, $_POST['author']);
    $price = (float)$_POST['price'];
    $copies = (int)$_POST['copies'];

    // Validation
    if (empty($title) || empty($author) || $price <= 0 || $copies < 0) {
        $errors[] = "All fields are required, and price must be greater than 0.";
    }

    if (empty($errors)) {
        if (isset($_POST['insert'])) {
            // Insert book
            $query = "INSERT INTO books (title, author, price, copies) VALUES ('$title', '$author', $price, $copies)";
            if (mysqli_query($conn, $query)) {
                $success_message = "Book added successfully!";
            } else {
                $errors[] = "Error: " . mysqli_error($conn);
            }
        } elseif (isset($_POST['update'])) {
            // Update book
            $id = (int)$_POST['id'];
            $query = "UPDATE books SET title='$title', author='$author', price=$price, copies=$copies WHERE id=$id";
            if (mysqli_query($conn, $query)) {
                $success_message = "Book updated successfully!";
            } else {
                $errors[] = "Error: " . mysqli_error($conn);
            }
        }
    }
}

// Handle delete operation
if (isset($_GET['delete'])) {
    $id = (int)$_GET['delete'];
    $query = "DELETE FROM books WHERE id=$id";
    if (mysqli_query($conn, $query)) {
        $success_message = "Book deleted successfully!";
    } else {
        $errors[] = "Error: " . mysqli_error($conn);
    }
}

// Fetch all books
$books = mysqli_query($conn, "SELECT * FROM books");

// Fetch books with maximum copies
$max_copies_query = "SELECT * FROM books WHERE copies = (SELECT MAX(copies) FROM books)";
$max_copies_books = mysqli_query($conn, $max_copies_query);

?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Library Management System</title>
</head>
<body>
    <h2>Library Management System</h2>

    <?php if (!empty($errors)) : ?>
        <div style="color: red;">
            <?php foreach ($errors as $error) {
                echo $error . "<br>";
            } ?>
        </div>
    <?php endif; ?>

    <?php if ($success_message) : ?>
        <div style="color: green;">
            <?php echo $success_message; ?>
        </div>
    <?php endif; ?>

    <form method="POST" action="">
        <input type="hidden" name="id" value="<?php echo $id; ?>">
        <label>Title:</label>
        <input type="text" name="title" value="<?php echo $title; ?>" required><br>

        <label>Author:</label>
        <input type="text" name="author" value="<?php echo $author; ?>" required><br>

        <label>Price:</label>
        <input type="number" step="0.01" name="price" value="<?php echo $price; ?>" required><br>

        <label>Copies:</label>
        <input type="number" name="copies" value="<?php echo $copies; ?>" required><br><br>

        <button type="submit" name="insert">Add Book</button>
        <button type="submit" name="update">Update Book</button>
    </form>

    <h3>All Books</h3>
    <table border="1">
        <tr>
            <th>ID</th>
            <th>Title</th>
            <th>Author</th>
            <th>Price</th>
            <th>Copies</th>
            <th>Actions</th>
        </tr>
        <?php while ($row = mysqli_fetch_assoc($books)) : ?>
            <tr>
                <td><?php echo $row['id']; ?></td>
                <td><?php echo $row['title']; ?></td>
                <td><?php echo $row['author']; ?></td>
                <td><?php echo $row['price']; ?></td>
                <td><?php echo $row['copies']; ?></td>
                <td>
                    <a href="?delete=<?php echo $row['id']; ?>">Delete</a>
                    <a href="?edit=<?php echo $row['id']; ?>">Edit</a>
                </td>
            </tr>
        <?php endwhile; ?>
    </table>

    <h3>Books with Maximum Copies</h3>
    <table border="1">
        <tr>
            <th>ID</th>
            <th>Title</th>
            <th>Author</th>
            <th>Price</th>
            <th>Copies</th>
        </tr>
        <?php while ($row = mysqli_fetch_assoc($max_copies_books)) : ?>
            <tr>
                <td><?php echo $row['id']; ?></td>
                <td><?php echo $row['title']; ?></td>
                <td><?php echo $row['author']; ?></td>
                <td><?php echo $row['price']; ?></td>
                <td><?php echo $row['copies']; ?></td>
            </tr>
        <?php endwhile; ?>
    </table>
</body>
</html>
  

9). Write a PHP code which accepts details for Real Estate.	[40]
     a.	Give the facility for searching category wise (bunglow, row house, shop, land, etc.) and area wise different properties.
     b.	Create database and provide facility to insert and delete using form.
     c.	Provide appropriate validations.


=>
CREATE DATABASE real_estate;
USE real_estate;

CREATE TABLE properties (
    id INT AUTO_INCREMENT PRIMARY KEY,
    category VARCHAR(50) NOT NULL,
    area VARCHAR(100) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    description TEXT NOT NULL
);

=> 1. Database Connection (db_connect.php)

<?php
$servername = "localhost";
$username = "root"; // Your database username
$password = ""; // Your database password
$dbname = "real_estate"; // Your database name

// Create connection
$conn = mysqli_connect($servername, $username, $password, $dbname);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}
?>

=> 2. Real Estate Management System (real_estate_management.php)
<?php
include 'db_connect.php';

// Initialize variables
$category = $area = $price = $description = "";
$errors = [];
$success_message = "";

// Handle form submission for insert
if ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_POST['insert'])) {
    $category = mysqli_real_escape_string($conn, $_POST['category']);
    $area = mysqli_real_escape_string($conn, $_POST['area']);
    $price = (float)$_POST['price'];
    $description = mysqli_real_escape_string($conn, $_POST['description']);

    // Validation
    if (empty($category) || empty($area) || $price <= 0 || empty($description)) {
        $errors[] = "All fields are required, and price must be greater than 0.";
    }

    if (empty($errors)) {
        // Insert property
        $query = "INSERT INTO properties (category, area, price, description) VALUES ('$category', '$area', $price, '$description')";
        if (mysqli_query($conn, $query)) {
            $success_message = "Property added successfully!";
            // Reset form fields
            $category = $area = $price = $description = "";
        } else {
            $errors[] = "Error: " . mysqli_error($conn);
        }
    }
}

// Handle delete operation
if (isset($_GET['delete'])) {
    $id = (int)$_GET['delete'];
    $query = "DELETE FROM properties WHERE id=$id";
    if (mysqli_query($conn, $query)) {
        $success_message = "Property deleted successfully!";
    } else {
        $errors[] = "Error: " . mysqli_error($conn);
    }
}

// Fetch all properties
$properties = mysqli_query($conn, "SELECT * FROM properties");

// Fetch properties based on category
$search_category = '';
if (isset($_POST['search'])) {
    $search_category = mysqli_real_escape_string($conn, $_POST['search_category']);
    $properties = mysqli_query($conn, "SELECT * FROM properties WHERE category LIKE '%$search_category%'");
}

?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Real Estate Management System</title>
</head>
<body>
    <h2>Real Estate Management System</h2>

    <?php if (!empty($errors)) : ?>
        <div style="color: red;">
            <?php foreach ($errors as $error) {
                echo $error . "<br>";
            } ?>
        </div>
    <?php endif; ?>

    <?php if ($success_message) : ?>
        <div style="color: green;">
            <?php echo $success_message; ?>
        </div>
    <?php endif; ?>

    <form method="POST" action="">
        <h3>Add Property</h3>
        <label>Category:</label>
        <input type="text" name="category" value="<?php echo $category; ?>" required><br>

        <label>Area:</label>
        <input type="text" name="area" value="<?php echo $area; ?>" required><br>

        <label>Price:</label>
        <input type="number" step="0.01" name="price" value="<?php echo $price; ?>" required><br>

        <label>Description:</label>
        <textarea name="description" required><?php echo $description; ?></textarea><br><br>

        <button type="submit" name="insert">Add Property</button>
    </form>

    <form method="POST" action="">
        <h3>Search Property by Category</h3>
        <label>Category:</label>
        <input type="text" name="search_category" value="<?php echo $search_category; ?>">
        <button type="submit" name="search">Search</button>
    </form>

    <h3>All Properties</h3>
    <table border="1">
        <tr>
            <th>ID</th>
            <th>Category</th>
            <th>Area</th>
            <th>Price</th>
            <th>Description</th>
            <th>Actions</th>
        </tr>
        <?php while ($row = mysqli_fetch_assoc($properties)) : ?>
            <tr>
                <td><?php echo $row['id']; ?></td>
                <td><?php echo $row['category']; ?></td>
                <td><?php echo $row['area']; ?></td>
                <td><?php echo $row['price']; ?></td>
                <td><?php echo $row['description']; ?></td>
                <td>
                    <a href="?delete=<?php echo $row['id']; ?>">Delete</a>
                </td>
            </tr>
        <?php endwhile; ?>
    </table>
</body>
</html>



10). Write a PHP/MySQL code which manages the employee information in      [40]
EMP_DETAILS (empno,empname,salary,doj). It should provide insert, update facility along with searching facility to search employee’s details according to their salary, and experience and display in proper format with validation.


=> CREATE DATABASE employee_management;
USE employee_management;

CREATE TABLE EMP_DETAILS (
    empno INT AUTO_INCREMENT PRIMARY KEY,
    empname VARCHAR(100) NOT NULL,
    salary DECIMAL(10, 2) NOT NULL,
    doj DATE NOT NULL
);


=> 1. Database Connection (db_connect.php)

<?php
$servername = "localhost";
$username = "root"; // Your database username
$password = ""; // Your database password
$dbname = "employee_management"; // Your database name

// Create connection
$conn = mysqli_connect($servername, $username, $password, $dbname);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}
?>


=> 2. Employee Management System (employee_management.php)
The following PHP script implements the required functionalities for managing employee information.

<?php
include 'db_connect.php';

// Initialize variables
$empno = $empname = $salary = $doj = "";
$errors = [];
$success_message = "";

// Handle form submission for insert
if ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_POST['insert'])) {
    $empname = mysqli_real_escape_string($conn, $_POST['empname']);
    $salary = (float)$_POST['salary'];
    $doj = $_POST['doj'];

    // Validation
    if (empty($empname) || empty($salary) || empty($doj)) {
        $errors[] = "All fields are required.";
    } elseif ($salary <= 0) {
        $errors[] = "Salary must be greater than 0.";
    }

    if (empty($errors)) {
        // Insert employee
        $query = "INSERT INTO EMP_DETAILS (empname, salary, doj) VALUES ('$empname', $salary, '$doj')";
        if (mysqli_query($conn, $query)) {
            $success_message = "Employee added successfully!";
            // Reset form fields
            $empname = $salary = $doj = "";
        } else {
            $errors[] = "Error: " . mysqli_error($conn);
        }
    }
}

// Handle form submission for update
if ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_POST['update'])) {
    $empno = (int)$_POST['empno'];
    $empname = mysqli_real_escape_string($conn, $_POST['empname']);
    $salary = (float)$_POST['salary'];
    $doj = $_POST['doj'];

    // Validation
    if (empty($empname) || empty($salary) || empty($doj)) {
        $errors[] = "All fields are required.";
    } elseif ($salary <= 0) {
        $errors[] = "Salary must be greater than 0.";
    }

    if (empty($errors)) {
        // Update employee
        $query = "UPDATE EMP_DETAILS SET empname='$empname', salary=$salary, doj='$doj' WHERE empno=$empno";
        if (mysqli_query($conn, $query)) {
            $success_message = "Employee updated successfully!";
            // Reset form fields
            $empno = $empname = $salary = $doj = "";
        } else {
            $errors[] = "Error: " . mysqli_error($conn);
        }
    }
}

// Handle search operation
$search_results = [];
if (isset($_POST['search'])) {
    $salary = (float)$_POST['search_salary'];
    $experience_years = (int)$_POST['experience_years'];

    // Validate inputs
    if ($salary < 0 || $experience_years < 0) {
        $errors[] = "Salary and experience years must be non-negative.";
    }

    if (empty($errors)) {
        // Search employees based on salary and experience
        $query = "SELECT * FROM EMP_DETAILS WHERE salary >= $salary AND DATEDIFF(CURDATE(), doj) / 365 >= $experience_years";
        $search_results = mysqli_query($conn, $query);
    }
}

// Fetch all employees for display
$employees = mysqli_query($conn, "SELECT * FROM EMP_DETAILS");

?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Employee Management System</title>
</head>
<body>
    <h2>Employee Management System</h2>

    <?php if (!empty($errors)) : ?>
        <div style="color: red;">
            <?php foreach ($errors as $error) {
                echo $error . "<br>";
            } ?>
        </div>
    <?php endif; ?>

    <?php if ($success_message) : ?>
        <div style="color: green;">
            <?php echo $success_message; ?>
        </div>
    <?php endif; ?>

    <form method="POST" action="">
        <h3>Add Employee</h3>
        <label>Employee Name:</label>
        <input type="text" name="empname" value="<?php echo $empname; ?>" required><br>

        <label>Salary:</label>
        <input type="number" step="0.01" name="salary" value="<?php echo $salary; ?>" required><br>

        <label>Date of Joining:</label>
        <input type="date" name="doj" value="<?php echo $doj; ?>" required><br><br>

        <button type="submit" name="insert">Add Employee</button>
    </form>

    <form method="POST" action="">
        <h3>Update Employee</h3>
        <label>Employee No:</label>
        <input type="number" name="empno" required><br>

        <label>Employee Name:</label>
        <input type="text" name="empname" required><br>

        <label>Salary:</label>
        <input type="number" step="0.01" name="salary" required><br>

        <label>Date of Joining:</label>
        <input type="date" name="doj" required><br><br>

        <button type="submit" name="update">Update Employee</button>
    </form>

    <form method="POST" action="">
        <h3>Search Employees</h3>
        <label>Minimum Salary:</label>
        <input type="number" step="0.01" name="search_salary"><br>

        <label>Minimum Experience (Years):</label>
        <input type="number" name="experience_years"><br><br>

        <button type="submit" name="search">Search</button>
    </form>

    <h3>All Employees</h3>
    <table border="1">
        <tr>
            <th>Employee No</th>
            <th>Name</th>
            <th>Salary</th>
            <th>Date of Joining</th>
        </tr>
        <?php while ($row = mysqli_fetch_assoc($employees)) : ?>
            <tr>
                <td><?php echo $row['empno']; ?></td>
                <td><?php echo $row['empname']; ?></td>
                <td><?php echo $row['salary']; ?></td>
                <td><?php echo $row['doj']; ?></td>
            </tr>
        <?php endwhile; ?>
    </table>

    <?php if (!empty($search_results)) : ?>
        <h3>Search Results</h3>
        <table border="1">
            <tr>
                <th>Employee No</th>
                <th>Name</th>
                <th>Salary</th>
                <th>Date of Joining</th>
            </tr>
            <?php while ($row = mysqli_fetch_assoc($search_results)) : ?>
                <tr>
                    <td><?php echo $row['empno']; ?></td>
                    <td><?php echo $row['empname']; ?></td>
                    <td><?php echo $row['salary']; ?></td>
                    <td><?php echo $row['doj']; ?></td>
                </tr>
            <?php endwhile; ?>
        </table>
    <?php endif; ?>
</body>
</html>



11). Create a PHP website for college management system that allows	[45]
students registration, login and search for particular student name wise or email wise or phone number wise.

=> 
CREATE DATABASE college_management;
USE college_management;

CREATE TABLE students (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    email VARCHAR(100) NOT NULL UNIQUE,
    phone VARCHAR(15) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL
);

=> 1. Database Connection (db_connect.php)

<?php
$servername = "localhost";
$username = "root"; // Your database username
$password = ""; // Your database password
$dbname = "college_management"; // Your database name

// Create connection
$conn = mysqli_connect($servername, $username, $password, $dbname);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}
?>



=> 2. College Management System (index.php)

<?php
session_start();
include 'db_connect.php';

// Initialize variables
$name = $email = $phone = $password = "";
$errors = [];
$success_message = "";

// Handle registration
if ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_POST['register'])) {
    $name = mysqli_real_escape_string($conn, $_POST['name']);
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    $phone = mysqli_real_escape_string($conn, $_POST['phone']);
    $password = password_hash($_POST['password'], PASSWORD_DEFAULT);

    // Validation
    if (empty($name) || empty($email) || empty($phone) || empty($_POST['password'])) {
        $errors[] = "All fields are required.";
    }

    // Check if email or phone already exists
    $check_query = "SELECT * FROM students WHERE email='$email' OR phone='$phone'";
    $result = mysqli_query($conn, $check_query);
    if (mysqli_num_rows($result) > 0) {
        $errors[] = "Email or phone number already exists.";
    }

    if (empty($errors)) {
        // Insert student
        $query = "INSERT INTO students (name, email, phone, password) VALUES ('$name', '$email', '$phone', '$password')";
        if (mysqli_query($conn, $query)) {
            $success_message = "Registration successful! You can now log in.";
            // Reset form fields
            $name = $email = $phone = $password = "";
        } else {
            $errors[] = "Error: " . mysqli_error($conn);
        }
    }
}

// Handle login
if ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_POST['login'])) {
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    $password = $_POST['password'];

    $query = "SELECT * FROM students WHERE email='$email'";
    $result = mysqli_query($conn, $query);

    if (mysqli_num_rows($result) == 1) {
        $student = mysqli_fetch_assoc($result);
        if (password_verify($password, $student['password'])) {
            $_SESSION['user'] = $student;
        } else {
            $errors[] = "Invalid password.";
        }
    } else {
        $errors[] = "No student found with this email.";
    }
}

// Handle search operation
$search_results = [];
if (isset($_POST['search'])) {
    $search_term = mysqli_real_escape_string($conn, $_POST['search_term']);
    $search_query = "SELECT * FROM students WHERE name LIKE '%$search_term%' OR email LIKE '%$search_term%' OR phone LIKE '%$search_term%'";
    $search_results = mysqli_query($conn, $search_query);
}

// Logout
if (isset($_GET['logout'])) {
    session_destroy();
    header("Location: index.php");
    exit();
}

?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>College Management System</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 20px;
        }
        .form-container {
            margin-bottom: 20px;
        }
        .errors {
            color: red;
        }
        .success {
            color: green;
        }
    </style>
</head>
<body>

<h2>College Management System</h2>

<?php if (!empty($errors)) : ?>
    <div class="errors">
        <?php foreach ($errors as $error) {
            echo $error . "<br>";
        } ?>
    </div>
<?php endif; ?>

<?php if ($success_message) : ?>
    <div class="success">
        <?php echo $success_message; ?>
    </div>
<?php endif; ?>

<!-- Registration Form -->
<div class="form-container">
    <h3>Register</h3>
    <form method="POST" action="">
        <label>Name:</label>
        <input type="text" name="name" value="<?php echo $name; ?>" required><br>

        <label>Email:</label>
        <input type="email" name="email" value="<?php echo $email; ?>" required><br>

        <label>Phone:</label>
        <input type="text" name="phone" value="<?php echo $phone; ?>" required><br>

        <label>Password:</label>
        <input type="password" name="password" required><br><br>

        <button type="submit" name="register">Register</button>
    </form>
</div>

<!-- Login Form -->
<div class="form-container">
    <h3>Login</h3>
    <form method="POST" action="">
        <label>Email:</label>
        <input type="email" name="email" required><br>

        <label>Password:</label>
        <input type="password" name="password" required><br><br>

        <button type="submit" name="login">Login</button>
    </form>
</div>

<!-- Search Students -->
<?php if (isset($_SESSION['user'])): ?>
    <h3>Search Students</h3>
    <form method="POST" action="">
        <label>Search by Name, Email or Phone:</label>
        <input type="text" name="search_term" required><br><br>

        <button type="submit" name="search">Search</button>
    </form>

    <?php if (!empty($search_results)): ?>
        <h4>Search Results</h4>
        <table border="1">
            <tr>
                <th>ID</th>
                <th>Name</th>
                <th>Email</th>
                <th>Phone</th>
            </tr>
            <?php while ($row = mysqli_fetch_assoc($search_results)) : ?>
                <tr>
                    <td><?php echo $row['id']; ?></td>
                    <td><?php echo $row['name']; ?></td>
                    <td><?php echo $row['email']; ?></td>
                    <td><?php echo $row['phone']; ?></td>
                </tr>
            <?php endwhile; ?>
        </table>
    <?php endif; ?>
    
    <a href="index.php?logout=1">Logout</a>
<?php endif; ?>

</body>
</html>



12).stock management system 

CREATE DATABASE stock_management;
USE stock_management;

CREATE TABLE stock (
    id INT AUTO_INCREMENT PRIMARY KEY,
    item_name VARCHAR(100) NOT NULL,
    quantity INT NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    supplier VARCHAR(100),
    date_added DATETIME DEFAULT CURRENT_TIMESTAMP
);


=> 1. Database Connection (db_connect.php)

<?php
$servername = "localhost";
$username = "root"; // Your database username
$password = ""; // Your database password
$dbname = "stock_management"; // Your database name

// Create connection
$conn = mysqli_connect($servername, $username, $password, $dbname);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}
?>

=> 2. Stock Management System (index.php)

<?php
session_start();
include 'db_connect.php';

// Initialize variables
$item_name = $quantity = $price = $supplier = "";
$errors = [];
$success_message = "";

// Handle adding stock
if ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_POST['add_stock'])) {
    $item_name = mysqli_real_escape_string($conn, $_POST['item_name']);
    $quantity = mysqli_real_escape_string($conn, $_POST['quantity']);
    $price = mysqli_real_escape_string($conn, $_POST['price']);
    $supplier = mysqli_real_escape_string($conn, $_POST['supplier']);

    // Validation
    if (empty($item_name) || empty($quantity) || empty($price)) {
        $errors[] = "All fields are required.";
    }

    if (empty($errors)) {
        // Insert stock item
        $query = "INSERT INTO stock (item_name, quantity, price, supplier) VALUES ('$item_name', '$quantity', '$price', '$supplier')";
        if (mysqli_query($conn, $query)) {
            $success_message = "Stock item added successfully!";
            // Reset form fields
            $item_name = $quantity = $price = $supplier = "";
        } else {
            $errors[] = "Error: " . mysqli_error($conn);
        }
    }
}

// Handle updating stock
if ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_POST['update_stock'])) {
    $id = mysqli_real_escape_string($conn, $_POST['id']);
    $item_name = mysqli_real_escape_string($conn, $_POST['item_name']);
    $quantity = mysqli_real_escape_string($conn, $_POST['quantity']);
    $price = mysqli_real_escape_string($conn, $_POST['price']);
    $supplier = mysqli_real_escape_string($conn, $_POST['supplier']);

    // Update stock item
    $query = "UPDATE stock SET item_name='$item_name', quantity='$quantity', price='$price', supplier='$supplier' WHERE id='$id'";
    if (mysqli_query($conn, $query)) {
        $success_message = "Stock item updated successfully!";
    } else {
        $errors[] = "Error: " . mysqli_error($conn);
    }
}

// Handle deleting stock
if (isset($_GET['delete'])) {
    $id = mysqli_real_escape_string($conn, $_GET['delete']);
    $query = "DELETE FROM stock WHERE id='$id'";
    if (mysqli_query($conn, $query)) {
        $success_message = "Stock item deleted successfully!";
    } else {
        $errors[] = "Error: " . mysqli_error($conn);
    }
}

// Fetch all stock items
$stock_items = mysqli_query($conn, "SELECT * FROM stock");
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Stock Management System</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 20px;
        }
        .form-container {
            margin-bottom: 20px;
        }
        .errors {
            color: red;
        }
        .success {
            color: green;
        }
    </style>
</head>
<body>

<h2>Stock Management System</h2>

<?php if (!empty($errors)) : ?>
    <div class="errors">
        <?php foreach ($errors as $error) {
            echo $error . "<br>";
        } ?>
    </div>
<?php endif; ?>

<?php if ($success_message) : ?>
    <div class="success">
        <?php echo $success_message; ?>
    </div>
<?php endif; ?>

<!-- Add Stock Form -->
<div class="form-container">
    <h3>Add Stock Item</h3>
    <form method="POST" action="">
        <label>Item Name:</label>
        <input type="text" name="item_name" value="<?php echo $item_name; ?>" required><br>

        <label>Quantity:</label>
        <input type="number" name="quantity" value="<?php echo $quantity; ?>" required><br>

        <label>Price:</label>
        <input type="text" name="price" value="<?php echo $price; ?>" required><br>

        <label>Supplier:</label>
        <input type="text" name="supplier" value="<?php echo $supplier; ?>"><br><br>

        <button type="submit" name="add_stock">Add Stock</button>
    </form>
</div>

<!-- Update Stock Form -->
<div class="form-container">
    <h3>Update Stock Item</h3>
    <form method="POST" action="">
        <input type="hidden" name="id" id="update_id">
        <label>Item Name:</label>
        <input type="text" name="item_name" id="update_item_name" required><br>

        <label>Quantity:</label>
        <input type="number" name="quantity" id="update_quantity" required><br>

        <label>Price:</label>
        <input type="text" name="price" id="update_price" required><br>

        <label>Supplier:</label>
        <input type="text" name="supplier" id="update_supplier"><br><br>

        <button type="submit" name="update_stock">Update Stock</button>
    </form>
</div>

<!-- Stock Items Table -->
<h3>Stock Items</h3>
<table border="1">
    <tr>
        <th>ID</th>
        <th>Item Name</th>
        <th>Quantity</th>
        <th>Price</th>
        <th>Supplier</th>
        <th>Date Added</th>
        <th>Actions</th>
    </tr>
    <?php while ($row = mysqli_fetch_assoc($stock_items)) : ?>
        <tr>
            <td><?php echo $row['id']; ?></td>
            <td><?php echo $row['item_name']; ?></td>
            <td><?php echo $row['quantity']; ?></td>
            <td><?php echo $row['price']; ?></td>
            <td><?php echo $row['supplier']; ?></td>
            <td><?php echo $row['date_added']; ?></td>
            <td>
                <button onclick="populateUpdateForm(<?php echo htmlspecialchars(json_encode($row)); ?>)">Edit</button>
                <a href="?delete=<?php echo $row['id']; ?>" onclick="return confirm('Are you sure you want to delete this item?');">Delete</a>
            </td>
        </tr>
    <?php endwhile; ?>
</table>

<script>
    function populateUpdateForm(stockItem) {
        document.getElementById('update_id').value = stockItem.id;
        document.getElementById('update_item_name').value = stockItem.item_name;
        document.getElementById('update_quantity').value = stockItem.quantity;
        document.getElementById('update_price').value = stockItem.price;
        document.getElementById('update_supplier').value = stockItem.supplier;
    }
</script>

</body>
</html>



13). online hotel booking
=>
CREATE DATABASE hotel_booking;
USE hotel_booking;

CREATE TABLE users (
    id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(100) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    email VARCHAR(100) NOT NULL UNIQUE,
    phone VARCHAR(15) NOT NULL
);

CREATE TABLE hotels (
    id INT AUTO_INCREMENT PRIMARY KEY,
    hotel_name VARCHAR(100) NOT NULL,
    location VARCHAR(100) NOT NULL,
    price_per_night DECIMAL(10, 2) NOT NULL,
    available_rooms INT NOT NULL
);

CREATE TABLE bookings (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT,
    hotel_id INT,
    check_in DATE NOT NULL,
    check_out DATE NOT NULL,
    no_of_rooms INT NOT NULL,
    FOREIGN KEY (user_id) REFERENCES users(id),
    FOREIGN KEY (hotel_id) REFERENCES hotels(id)
);


=> 1. Database Connection (db_connect.php)
<?php
$servername = "localhost";
$username = "root"; // Your database username
$password = ""; // Your database password
$dbname = "hotel_booking"; // Your database name

// Create connection
$conn = mysqli_connect($servername, $username, $password, $dbname);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}
?>


=> 2. User Registration and Login (register.php)

<?php
session_start();
include 'db_connect.php';

$errors = [];
$success_message = "";

// Handle registration
if ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_POST['register'])) {
    $username = mysqli_real_escape_string($conn, $_POST['username']);
    $password = mysqli_real_escape_string($conn, $_POST['password']);
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    $phone = mysqli_real_escape_string($conn, $_POST['phone']);

    // Validation
    if (empty($username) || empty($password) || empty($email) || empty($phone)) {
        $errors[] = "All fields are required.";
    }

    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    if (empty($errors)) {
        // Insert user
        $query = "INSERT INTO users (username, password, email, phone) VALUES ('$username', '$hashed_password', '$email', '$phone')";
        if (mysqli_query($conn, $query)) {
            $success_message = "Registration successful! You can now login.";
        } else {
            $errors[] = "Error: " . mysqli_error($conn);
        }
    }
}

// Handle login
if ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_POST['login'])) {
    $username = mysqli_real_escape_string($conn, $_POST['username']);
    $password = $_POST['password'];

    // Fetch user
    $result = mysqli_query($conn, "SELECT * FROM users WHERE username='$username'");
    if ($result && mysqli_num_rows($result) > 0) {
        $user = mysqli_fetch_assoc($result);
        // Verify password
        if (password_verify($password, $user['password'])) {
            $_SESSION['user_id'] = $user['id'];
            header('Location: search_hotels.php');
            exit();
        } else {
            $errors[] = "Invalid username or password.";
        }
    } else {
        $errors[] = "User not found.";
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>User Registration/Login</title>
</head>
<body>

<h2>User Registration</h2>
<form method="POST" action="">
    <label>Username:</label>
    <input type="text" name="username" required><br>
    <label>Password:</label>
    <input type="password" name="password" required><br>
    <label>Email:</label>
    <input type="email" name="email" required><br>
    <label>Phone:</label>
    <input type="text" name="phone" required><br>
    <button type="submit" name="register">Register</button>
</form>

<h2>User Login</h2>
<form method="POST" action="">
    <label>Username:</label>
    <input type="text" name="username" required><br>
    <label>Password:</label>
    <input type="password" name="password" required><br>
    <button type="submit" name="login">Login</button>
</form>

<?php if (!empty($errors)) : ?>
    <div style="color:red;">
        <?php foreach ($errors as $error) {
            echo $error . "<br>";
        } ?>
    </div>
<?php endif; ?>

<?php if ($success_message) : ?>
    <div style="color:green;">
        <?php echo $success_message; ?>
    </div>
<?php endif; ?>

</body>
</html>


=> 3. Search Hotels (search_hotels.php)
<?php
session_start();
include 'db_connect.php';

if (!isset($_SESSION['user_id'])) {
    header('Location: register.php');
    exit();
}

$errors = [];
$success_message = "";
$hotels = [];

if ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_POST['search'])) {
    $location = mysqli_real_escape_string($conn, $_POST['location']);
    $price_range = mysqli_real_escape_string($conn, $_POST['price_range']);
    
    $query = "SELECT * FROM hotels WHERE location='$location'";

    if ($price_range) {
        $query .= " AND price_per_night <= '$price_range'";
    }

    $result = mysqli_query($conn, $query);
    $hotels = mysqli_fetch_all($result, MYSQLI_ASSOC);
}

// Handle booking
if ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_POST['book'])) {
    $hotel_id = mysqli_real_escape_string($conn, $_POST['hotel_id']);
    $user_id = $_SESSION['user_id'];
    $check_in = mysqli_real_escape_string($conn, $_POST['check_in']);
    $check_out = mysqli_real_escape_string($conn, $_POST['check_out']);
    $no_of_rooms = mysqli_real_escape_string($conn, $_POST['no_of_rooms']);

    $query = "INSERT INTO bookings (user_id, hotel_id, check_in, check_out, no_of_rooms) VALUES ('$user_id', '$hotel_id', '$check_in', '$check_out', '$no_of_rooms')";
    if (mysqli_query($conn, $query)) {
        $success_message = "Booking successful!";
    } else {
        $errors[] = "Error: " . mysqli_error($conn);
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Search Hotels</title>
</head>
<body>

<h2>Search Hotels</h2>
<form method="POST" action="">
    <label>Location:</label>
    <input type="text" name="location" required><br>
    <label>Price Range:</label>
    <input type="number" name="price_range" placeholder="Max Price"><br>
    <button type="submit" name="search">Search</button>
</form>

<?php if (!empty($errors)) : ?>
    <div style="color:red;">
        <?php foreach ($errors as $error) {
            echo $error . "<br>";
        } ?>
    </div>
<?php endif; ?>

<?php if ($success_message) : ?>
    <div style="color:green;">
        <?php echo $success_message; ?>
    </div>
<?php endif; ?>

<h3>Available Hotels</h3>
<?php if (count($hotels) > 0) : ?>
    <table border="1">
        <tr>
            <th>Hotel Name</th>
            <th>Location</th>
            <th>Price Per Night</th>
            <th>Available Rooms</th>
            <th>Actions</th>
        </tr>
        <?php foreach ($hotels as $hotel) : ?>
            <tr>
                <td><?php echo $hotel['hotel_name']; ?></td>
                <td><?php echo $hotel['location']; ?></td>
                <td><?php echo $hotel['price_per_night']; ?></td>
                <td><?php echo $hotel['available_rooms']; ?></td>
                <td>
                    <form method="POST" action="">
                        <input type="hidden" name="hotel_id" value="<?php echo $hotel['id']; ?>">
                        <label>Check-in:</label>
                        <input type="date" name="check_in" required>
                        <label>Check-out:</label>
                        <input type="date" name="check_out" required>
                        <label>No. of Rooms:</label>
                        <input type="number" name="no_of_rooms" required>
                        <button type="submit" name="book">Book Now</button>
                    </form>
                </td>
            </tr>
        <?php endforeach; ?>
    </table>
<?php else : ?>
    <p>No hotels found.</p>
<?php endif; ?>

</body>
</html>


=>  Logout (logout.php)

<?php
session_start();
session_destroy();
header('Location: register.php');
exit();
?>



14). banking system

CREATE DATABASE banking_system;
USE banking_system;

CREATE TABLE users (
    id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(100) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    email VARCHAR(100) NOT NULL UNIQUE,
    phone VARCHAR(15) NOT NULL
);

CREATE TABLE accounts (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT,
    account_number VARCHAR(20) NOT NULL UNIQUE,
    account_type ENUM('Savings', 'Checking') NOT NULL,
    balance DECIMAL(10, 2) NOT NULL DEFAULT 0.00,
    FOREIGN KEY (user_id) REFERENCES users(id)
);

CREATE TABLE transactions (
    id INT AUTO_INCREMENT PRIMARY KEY,
    account_id INT,
    transaction_type ENUM('Deposit', 'Withdraw') NOT NULL,
    amount DECIMAL(10, 2) NOT NULL,
    transaction_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (account_id) REFERENCES accounts(id)
);

=> 1. Database Connection (db_connect.php)
<?php
$servername = "localhost";
$username = "root"; // Your database username
$password = ""; // Your database password
$dbname = "banking_system"; // Your database name

// Create connection
$conn = mysqli_connect($servername, $username, $password, $dbname);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}
?>

=> 2. User Registration and Login (register.php)
<?php
session_start();
include 'db_connect.php';

$errors = [];
$success_message = "";

// Handle registration
if ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_POST['register'])) {
    $username = mysqli_real_escape_string($conn, $_POST['username']);
    $password = mysqli_real_escape_string($conn, $_POST['password']);
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    $phone = mysqli_real_escape_string($conn, $_POST['phone']);

    // Validation
    if (empty($username) || empty($password) || empty($email) || empty($phone)) {
        $errors[] = "All fields are required.";
    }

    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    if (empty($errors)) {
        // Insert user
        $query = "INSERT INTO users (username, password, email, phone) VALUES ('$username', '$hashed_password', '$email', '$phone')";
        if (mysqli_query($conn, $query)) {
            $success_message = "Registration successful! You can now login.";
        } else {
            $errors[] = "Error: " . mysqli_error($conn);
        }
    }
}

// Handle login
if ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_POST['login'])) {
    $username = mysqli_real_escape_string($conn, $_POST['username']);
    $password = $_POST['password'];

    // Fetch user
    $result = mysqli_query($conn, "SELECT * FROM users WHERE username='$username'");
    if ($result && mysqli_num_rows($result) > 0) {
        $user = mysqli_fetch_assoc($result);
        // Verify password
        if (password_verify($password, $user['password'])) {
            $_SESSION['user_id'] = $user['id'];
            header('Location: dashboard.php');
            exit();
        } else {
            $errors[] = "Invalid username or password.";
        }
    } else {
        $errors[] = "User not found.";
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>User Registration/Login</title>
</head>
<body>

<h2>User Registration</h2>
<form method="POST" action="">
    <label>Username:</label>
    <input type="text" name="username" required><br>
    <label>Password:</label>
    <input type="password" name="password" required><br>
    <label>Email:</label>
    <input type="email" name="email" required><br>
    <label>Phone:</label>
    <input type="text" name="phone" required><br>
    <button type="submit" name="register">Register</button>
</form>

<h2>User Login</h2>
<form method="POST" action="">
    <label>Username:</label>
    <input type="text" name="username" required><br>
    <label>Password:</label>
    <input type="password" name="password" required><br>
    <button type="submit" name="login">Login</button>
</form>

<?php if (!empty($errors)) : ?>
    <div style="color:red;">
        <?php foreach ($errors as $error) {
            echo $error . "<br>";
        } ?>
    </div>
<?php endif; ?>

<?php if ($success_message) : ?>
    <div style="color:green;">
        <?php echo $success_message; ?>
    </div>
<?php endif; ?>

</body>
</html>

=> 3. Dashboard (dashboard.php)


<?php
session_start();
include 'db_connect.php';

if (!isset($_SESSION['user_id'])) {
    header('Location: register.php');
    exit();
}

$user_id = $_SESSION['user_id'];
$accounts = [];

// Fetch user accounts
$query = "SELECT * FROM accounts WHERE user_id='$user_id'";
$result = mysqli_query($conn, $query);
if ($result) {
    $accounts = mysqli_fetch_all($result, MYSQLI_ASSOC);
}

// Handle account creation
if ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_POST['create_account'])) {
    $account_number = mysqli_real_escape_string($conn, $_POST['account_number']);
    $account_type = mysqli_real_escape_string($conn, $_POST['account_type']);

    $query = "INSERT INTO accounts (user_id, account_number, account_type, balance) VALUES ('$user_id', '$account_number', '$account_type', 0)";
    if (mysqli_query($conn, $query)) {
        header('Location: dashboard.php');
        exit();
    }
}

// Handle deposit
if ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_POST['deposit'])) {
    $account_id = mysqli_real_escape_string($conn, $_POST['account_id']);
    $amount = mysqli_real_escape_string($conn, $_POST['amount']);

    // Update account balance
    $query = "UPDATE accounts SET balance = balance + $amount WHERE id = '$account_id'";
    mysqli_query($conn, $query);

    // Log transaction
    $query = "INSERT INTO transactions (account_id, transaction_type, amount) VALUES ('$account_id', 'Deposit', '$amount')";
    mysqli_query($conn, $query);

    header('Location: dashboard.php');
    exit();
}

// Handle withdrawal
if ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_POST['withdraw'])) {
    $account_id = mysqli_real_escape_string($conn, $_POST['account_id']);
    $amount = mysqli_real_escape_string($conn, $_POST['amount']);

    // Update account balance
    $query = "UPDATE accounts SET balance = balance - $amount WHERE id = '$account_id'";
    mysqli_query($conn, $query);

    // Log transaction
    $query = "INSERT INTO transactions (account_id, transaction_type, amount) VALUES ('$account_id', 'Withdraw', '$amount')";
    mysqli_query($conn, $query);

    header('Location: dashboard.php');
    exit();
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Dashboard</title>
</head>
<body>

<h2>Welcome to Your Dashboard</h2>

<h3>Create a New Account</h3>
<form method="POST" action="">
    <label>Account Number:</label>
    <input type="text" name="account_number" required><br>
    <label>Account Type:</label>
    <select name="account_type">
        <option value="Savings">Savings</option>
        <option value="Checking">Checking</option>
    </select><br>
    <button type="submit" name="create_account">Create Account</button>
</form>

<h3>Your Accounts</h3>
<table border="1">
    <tr>
        <th>Account Number</th>
        <th>Account Type</th>
        <th>Balance</th>
        <th>Actions</th>
    </tr>
    <?php foreach ($accounts as $account) : ?>
        <tr>
            <td><?php echo $account['account_number']; ?></td>
            <td><?php echo $account['account_type']; ?></td>
            <td><?php echo $account['balance']; ?></td>
            <td>
                <form method="POST" action="">
                    <input type="hidden" name="account_id" value="<?php echo $account['id']; ?>">
                    <label>Deposit:</label>
                    <input type="number" name="amount" required>
                    <button type="submit" name="deposit">Deposit</button>
                    <label>Withdraw:</label>
                    <input type="number" name="amount" required>
                    <button type="submit" name="withdraw">Withdraw</button>
                </form>
            </td>
        </tr>
    <?php endforeach; ?>
</table>

<a href="logout.php">Logout</a>

</body>
</html>



=> 4. Logout (logout.php)
<?php
session_start();
session_destroy();
header('Location: register.php');
exit();
?>




15).

create a website online hotel booking using php  which have information like customer name , hotel_city,hotel_state , no. of persons , booking date ,room type , etc. store these record in database .also provide facility to customer like:-
booking hotel according to your choice 
cancellation booking

=> 
CREATE DATABASE hotel_booking;
USE hotel_booking;

CREATE TABLE customers (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    email VARCHAR(100) NOT NULL UNIQUE,
    phone VARCHAR(15) NOT NULL
);

CREATE TABLE hotels (
    id INT AUTO_INCREMENT PRIMARY KEY,
    hotel_name VARCHAR(100) NOT NULL,
    city VARCHAR(100) NOT NULL,
    state VARCHAR(100) NOT NULL,
    room_type VARCHAR(50) NOT NULL,
    price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE bookings (
    id INT AUTO_INCREMENT PRIMARY KEY,
    customer_id INT,
    hotel_id INT,
    booking_date DATE NOT NULL,
    number_of_persons INT NOT NULL,
    FOREIGN KEY (customer_id) REFERENCES customers(id),
    FOREIGN KEY (hotel_id) REFERENCES hotels(id)
);

=> 1. Database Connection (db_connect.php)
<?php
$servername = "localhost";
$username = "root"; // Your database username
$password = ""; // Your database password
$dbname = "hotel_booking"; // Your database name

// Create connection
$conn = mysqli_connect($servername, $username, $password, $dbname);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}
?>

=>2. Customer Registration and Hotel Search (index.php)
<?php
session_start();
include 'db_connect.php';

$hotels = [];
$success_message = "";
$errors = [];

// Handle customer registration
if ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_POST['register'])) {
    $name = mysqli_real_escape_string($conn, $_POST['name']);
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    $phone = mysqli_real_escape_string($conn, $_POST['phone']);

    // Validation
    if (empty($name) || empty($email) || empty($phone)) {
        $errors[] = "All fields are required.";
    }

    if (empty($errors)) {
        // Insert customer
        $query = "INSERT INTO customers (name, email, phone) VALUES ('$name', '$email', '$phone')";
        if (mysqli_query($conn, $query)) {
            $_SESSION['customer_id'] = mysqli_insert_id($conn);
            header('Location: book.php');
            exit();
        } else {
            $errors[] = "Error: " . mysqli_error($conn);
        }
    }
}

// Handle hotel search
if (isset($_POST['search_hotels'])) {
    $city = mysqli_real_escape_string($conn, $_POST['city']);
    $state = mysqli_real_escape_string($conn, $_POST['state']);
    
    $query = "SELECT * FROM hotels WHERE city='$city' AND state='$state'";
    $result = mysqli_query($conn, $query);
    if ($result) {
        $hotels = mysqli_fetch_all($result, MYSQLI_ASSOC);
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Hotel Booking System</title>
</head>
<body>

<h2>Customer Registration</h2>
<form method="POST" action="">
    <label>Name:</label>
    <input type="text" name="name" required><br>
    <label>Email:</label>
    <input type="email" name="email" required><br>
    <label>Phone:</label>
    <input type="text" name="phone" required><br>
    <button type="submit" name="register">Register</button>
</form>

<?php if (!empty($errors)) : ?>
    <div style="color:red;">
        <?php foreach ($errors as $error) {
            echo $error . "<br>";
        } ?>
    </div>
<?php endif; ?>

<h2>Search Hotels</h2>
<form method="POST" action="">
    <label>City:</label>
    <input type="text" name="city" required><br>
    <label>State:</label>
    <input type="text" name="state" required><br>
    <button type="submit" name="search_hotels">Search</button>
</form>

<?php if (!empty($hotels)) : ?>
    <h3>Available Hotels:</h3>
    <table border="1">
        <tr>
            <th>Hotel Name</th>
            <th>Room Type</th>
            <th>Price</th>
            <th>Action</th>
        </tr>
        <?php foreach ($hotels as $hotel) : ?>
            <tr>
                <td><?php echo $hotel['hotel_name']; ?></td>
                <td><?php echo $hotel['room_type']; ?></td>
                <td><?php echo $hotel['price']; ?></td>
                <td>
                    <form method="POST" action="book.php">
                        <input type="hidden" name="hotel_id" value="<?php echo $hotel['id']; ?>">
                        <button type="submit">Book Now</button>
                    </form>
                </td>
            </tr>
        <?php endforeach; ?>
    </table>
<?php else : ?>
    <p>No hotels found.</p>
<?php endif; ?>

</body>
</html>

=> 3. Booking Page (book.php)
<?php
session_start();
include 'db_connect.php';

if (!isset($_SESSION['customer_id'])) {
    header('Location: index.php');
    exit();
}

$success_message = "";
$errors = [];
$hotel = [];

// Fetch hotel details
if (isset($_POST['hotel_id'])) {
    $hotel_id = mysqli_real_escape_string($conn, $_POST['hotel_id']);
    $result = mysqli_query($conn, "SELECT * FROM hotels WHERE id='$hotel_id'");
    if ($result && mysqli_num_rows($result) > 0) {
        $hotel = mysqli_fetch_assoc($result);
    } else {
        header('Location: index.php');
        exit();
    }
}

// Handle booking
if ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_POST['book'])) {
    $number_of_persons = mysqli_real_escape_string($conn, $_POST['number_of_persons']);
    $booking_date = mysqli_real_escape_string($conn, $_POST['booking_date']);

    // Validation
    if (empty($number_of_persons) || empty($booking_date)) {
        $errors[] = "All fields are required.";
    }

    if (empty($errors)) {
        // Insert booking
        $customer_id = $_SESSION['customer_id'];
        $query = "INSERT INTO bookings (customer_id, hotel_id, booking_date, number_of_persons) VALUES ('$customer_id', '$hotel_id', '$booking_date', '$number_of_persons')";
        if (mysqli_query($conn, $query)) {
            $success_message = "Booking successful!";
        } else {
            $errors[] = "Error: " . mysqli_error($conn);
        }
    }
}

// Handle cancellation
if ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_POST['cancel'])) {
    $booking_id = mysqli_real_escape_string($conn, $_POST['booking_id']);
    
    // Delete booking
    $query = "DELETE FROM bookings WHERE id='$booking_id'";
    if (mysqli_query($conn, $query)) {
        $success_message = "Booking cancelled successfully!";
    } else {
        $errors[] = "Error: " . mysqli_error($conn);
    }
}

// Fetch existing bookings
$customer_id = $_SESSION['customer_id'];
$bookings = mysqli_query($conn, "SELECT b.id, b.booking_date, b.number_of_persons, h.hotel_name FROM bookings b JOIN hotels h ON b.hotel_id = h.id WHERE b.customer_id='$customer_id'");
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Book Hotel</title>
</head>
<body>

<h2>Book Hotel: <?php echo $hotel['hotel_name']; ?></h2>

<?php if (!empty($errors)) : ?>
    <div style="color:red;">
        <?php foreach ($errors as $error) {
            echo $error . "<br>";
        } ?>
    </div>
<?php endif; ?>

<?php if ($success_message) : ?>
    <div style="color:green;">
        <?php echo $success_message; ?>
    </div>
<?php endif; ?>

<form method="POST" action="">
    <label>Number of Persons:</label>
    <input type="number" name="number_of_persons" required><br>
    <label>Booking Date:</label>
    <input type="date" name="booking_date" required><br>
    <button type="submit" name="book">Book Now</button>
</form>

<h2>Your Bookings</h2>
<table border="1">
    <tr>
        <th>Booking ID</th>
        <th>Hotel Name</th>
        <th>Booking Date</th>
        <th>Number of Persons</th>
        <th>Action</th>
    </tr>
    <?php while ($row = mysqli_fetch_assoc($bookings)) : ?>
        <tr>
            <td><?php echo $row['id']; ?></td>
            <td><?php echo $row['hotel_name']; ?></td>
            <td><?php echo $row['booking_date']; ?></td>
            <td><?php echo $row['number_of_persons']; ?></td>
            <td>
                <form method="POST" action="">
                    <input type="hidden" name="booking_id" value="<?php echo $row['id']; ?>">
                    <button type="submit" name="cancel">Cancel Booking</button>
                </form>
            </td>
        </tr>
    <?php endwhile; ?>
</table>

<a href="index.php">Back to Home</a>

</body>
</html>


























