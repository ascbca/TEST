*****
=>Write a shell script to count the total number of words and lines ofthe given file.[use wc command.] simple shell script


#!/bin/bash

# Check if a file is provided as an argument
if [ $# -eq 0 ]; then
  echo "Please provide a file name as an argument."
  exit 1
fi

# Check if the file exists
if [ ! -f "$1" ]; then
  echo "File not found!"
  exit 1
fi

# Count the number of lines and words using wc command
lines=$(wc -l < "$1")
words=$(wc -w < "$1")

# Display the result
echo "The file '$1' has:"
echo "$lines lines"
echo "$words words"


=.     chmod +x count_words_lines.sh
       ./count_words_lines.sh yourfile.txt


=>Example:
Input:./count_words_lines.sh example.txt
Output:The file 'example.txt' has:
10 lines
50 words


=>write a shell script that validate user id entered.if the user_id not validate then display appropriate message else display welcome and user name
#!/bin/bash

# Prompt the user to enter a user ID
echo -n "Enter user ID: "
read user_id

# Validate if the user exists on the system using the `id` command
if id "$user_id" &>/dev/null; then
  # If the user exists, display a welcome message
  echo "Welcome, $user_id!"
else
  # If the user doesn't exist, display an error message
  echo "Error: User ID '$user_id' does not exist."
fi


run :-
validate_user.sh


chmod +x validate_user.sh
./validate_user.sh

Example:
Input:Enter user ID: john
Output (If the user exists):Welcome, john!




*****
=> asp.net masterpage


=> Master Page Code (Site.Master)

<%@ Master Language="C#" AutoEventWireup="true" CodeBehind="Site.master.cs" Inherits="YourNamespace.SiteMaster" %>

<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head runat="server">
    <title></title>
    <asp:ContentPlaceHolder ID="head" runat="server">
    </asp:ContentPlaceHolder>
    <link rel="stylesheet" type="text/css" href="styles.css" />
</head>
<body>
    <form id="form1" runat="server">
        <!-- Header Section -->
        <div id="header">
            <h1>Your Website Title</h1>
            <p>This is the common header for all pages.</p>
        </div>

        <!-- Navigation Section -->
        <div id="nav">
            <ul>
                <li><a href="Home.aspx">Home</a></li>
                <li><a href="About.aspx">About</a></li>
                <li><a href="Contact.aspx">Contact</a></li>
            </ul>
        </div>

        <!-- Main Content Section -->
        <div id="content">
            <!-- Placeholder where each content page will place its unique content -->
            <asp:ContentPlaceHolder ID="MainContent" runat="server">
            </asp:ContentPlaceHolder>
        </div>

        <!-- Footer Section -->
        <div id="footer">
            <p>&copy; 2024 Your Website. All rights reserved.</p>
        </div>
    </form>
</body>
</html>

Explanation:
Header: The <div id="header"> section defines the header that appears on every page.
Navigation: The navigation menu (<div id="nav">) will also remain the same across all pages.
Main Content Placeholder: The MainContent is a ContentPlaceHolder, which is where the unique content of each content page will be displayed. This is the area youâ€™ll change in each content page.
Footer: The footer is static and remains the same on all pages.
CSS: You can include a CSS file for styling by referencing it in the <head> section.





=> Content Page (e.g., Home.aspx)

<%@ Page Title="Home" Language="C#" MasterPageFile="~/Site.Master" AutoEventWireup="true" CodeBehind="Home.aspx.cs" Inherits="YourNamespace.Home" %>

<asp:Content ID="Content1" ContentPlaceHolderID="head" runat="server">
    <title>Home - Your Website</title>
</asp:Content>

<asp:Content ID="Content2" ContentPlaceHolderID="MainContent" runat="server">
    <h2>Welcome to Our Website</h2>
    <p>This is the home page content. You can change the content here for each page.</p>
</asp:Content>



Explanation:
MasterPageFile: This attribute defines which master page this content page is inheriting from.
ContentPlaceHolderID="head": Here, you can insert any page-specific metadata (e.g., title, styles).
ContentPlaceHolderID="MainContent": This is where the unique content for each page is placed. This content will be injected into the MainContent placeholder of the master page.


=>Content Page (e.g., About.aspx)

<%@ Page Title="About" Language="C#" MasterPageFile="~/Site.Master" AutoEventWireup="true" CodeBehind="About.aspx.cs" Inherits="YourNamespace.About" %>

<asp:Content ID="Content1" ContentPlaceHolderID="head" runat="server">
    <title>About Us - Your Website</title>
</asp:Content>

<asp:Content ID="Content2" ContentPlaceHolderID="MainContent" runat="server">
    <h2>About Us</h2>
    <p>This is the about page content. Here you can describe your website or business.</p>
</asp:Content>


=>explanation:
The header, footer, and navigation will remain the same as in the master page. Only the content in the MainContent section changes.


=>Code-Behind Example (Site.master.cs)

using System;

namespace YourNamespace
{
    public partial class SiteMaster : System.Web.UI.MasterPage
    {
        protected void Page_Load(object sender, EventArgs e)
        {
            if (!IsPostBack)
            {
                // You can add some logic here, like dynamic content loading.
            }
        }
    }
}


=>CSS (styles.css)
This CSS can be used to style the master page.





body {
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 0;
}

#header {
    background-color: #333;
    color: white;
    padding: 10px;
    text-align: center;
}

#nav {
    background-color: #444;
    padding: 10px;
    text-align: center;
}

#nav ul {
    list-style-type: none;
    margin: 0;
    padding: 0;
}

#nav ul li {
    display: inline;
    margin-right: 10px;
}

#nav ul li a {
    color: white;
    text-decoration: none;
}

#content {
    margin: 20px;
    padding: 20px;
    background-color: #f9f9f9;
}

#footer {
    background-color: #333;
    color: white;
    text-align: center;
    padding: 10px;
    position: fixed;
    bottom: 0;
    width: 100%;
}



Summary:
Use the master page to define the common structure (header, footer, navigation).
Create multiple content pages and use ContentPlaceHolder to define unique content for each page.
By only changing the content inside the MainContent placeholder in each content page, the rest of the structure remains consistent across all pages.
